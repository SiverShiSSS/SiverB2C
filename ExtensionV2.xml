<TrustFrameworkPolicy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06" PolicySchemaVersion="0.3.0.0" TenantId="siverb2c.onmicrosoft.com" PolicyId="B2C_1A_PasswordResetV2extension" PublicPolicyUri="http://siverb2c.onmicrosoft.com/B2C_1A_PasswordResetV2extension" TenantObjectId="91455ba6-6201-418f-a57d-19fbfdd754ba">
 <BasePolicy>
    <TenantId>siverb2c.onmicrosoft.com</TenantId>
   <PolicyId>B2C_1A_TrustFrameworkBase</PolicyId>
  </BasePolicy>
 <BuildingBlocks>
    <ClaimsSchema>
      <ClaimType Id="mfaCaptchaEnabled">
        <DisplayName>flag used to control captcha enabled in MFA in V3</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
    <ClaimType Id="signupCaptchaEnabled">
        <DisplayName>flag used to control captcha enabled in sign-up in V3</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="signinCaptchaEnabled">
        <DisplayName>flag used to control captcha enabled in sign-in in V3</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="inputSolution">
        <DisplayName>Solution input for HIP service </DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="solved">
        <DisplayName>Flag indicating that the captcha was successfully solved by HIP service </DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="reason">
        <DisplayName>Indicates the reason for captcha success/failure by HIP service eg: wrong answer etc </DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="azureregion">
       <DisplayName>Azure region which serviced the HIP request</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
       <ClaimType Id="captchaEnabled">
        <DisplayName>flag used to control captcha enabled in sign-up in V3</DisplayName>
        <DataType>string</DataType>
      </ClaimType>     
      <ClaimType Id="challengeId">
        <DisplayName>The ID of the generated captcha</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Captcha challenge identifier</UserHelpText>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>
      <ClaimType Id="challengeType">
        <DisplayName>Type of captcha (visual / audio)</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Captcha challenge type</UserHelpText>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>
      <ClaimType Id="challengeString">
        <DisplayName>Captcha challenge code</DisplayName>        
        <DataType>string</DataType>        
        <UserHelpText>Captcha challenge code</UserHelpText>
        <UserInputType>Paragraph</UserInputType>       
      </ClaimType>
      <ClaimType Id="captchaEntered">
        <DisplayName>Captcha entered by the user</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Enter the characters you see</UserHelpText>
        <UserInputType>TextBox</UserInputType>        
      </ClaimType>
      <ClaimType Id="isCaptchaSolved">
        <DisplayName>Flag indicating that the captcha was successfully solved</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="Otp">
        <DisplayName>Secondary One-time password</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="VerificationCode">
        <DisplayName>Secondary Verification Code</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Enter your email verification code</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <ClaimType Id="identifier">
        <DisplayName>Unique identifier</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="otpGenerated">
        <DisplayName>The generated one time password to verify</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="otpToVerify">
        <DisplayName>The one time password to verify</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="otpVerified">
        <DisplayName>Flag indicating that the identifier was successfully verified</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="mfaEnroll">
        <DisplayName>mfaEnroll</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>mfa enroll request</AdminHelpText>
      </ClaimType>
      <ClaimType Id="estsRequestId">
        <DisplayName>estsRequestId</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>stores request</AdminHelpText>
      </ClaimType>
      <ClaimType Id="mfaEnabledV3">
        <DisplayName>mfaEnabledV3</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>flag used to control mfa on/off in V3</AdminHelpText>
      </ClaimType>
      <ClaimType Id="forceChangePasswordNextLogin">
        <DisplayName>forceChangePasswordNextLogin</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>Directory property, Whether the user password has expired</AdminHelpText>
      </ClaimType>
      <ClaimType Id="samePassword">
        <DisplayName>samePassword</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>Whether user enters the same password</AdminHelpText>
      </ClaimType>
      <ClaimType Id="isForgotPassword">
        <DisplayName>isForgotPassword</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>Whether the user has clicked Forgot Password</AdminHelpText>
      </ClaimType>
      <ClaimType Id="forgotPasswordClickedOnSelfAsserted">
        <DisplayName>forgotPasswordClickedOnSelfAsserted</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>Indicated whether the user has clicked the forgot password link</AdminHelpText>
      </ClaimType>
      <ClaimType Id="enableSelfServicePasswordReset">
        <DisplayName>enableSelfServicePasswordReset</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>Whether self service password reset is enabled</AdminHelpText>
      </ClaimType>
      <ClaimType Id="continueOnPasswordExpiration">
        <DisplayName>continueOnPasswordExpiration</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>continue ests non-interactive upon password expiration</AdminHelpText>
      </ClaimType>
      <ClaimType Id="passwordExpired">
        <DisplayName>Whether password has expired</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>Whether password has expired</AdminHelpText>
      </ClaimType>
      <ClaimType Id="ConditionalAccessStatus">
        <DisplayName>The status of CA evaluation</DisplayName>
        <DataType>stringCollection</DataType>
        <AdminHelpText>The status of CA evaluation</AdminHelpText>
      </ClaimType>
      <ClaimType Id="AuthenticationMethodsUsed">
        <DisplayName>Authentication methods used</DisplayName>
        <DataType>stringCollection</DataType>
        <AdminHelpText>The list of authentication methods used</AdminHelpText>
      </ClaimType>
      <ClaimType Id="AuthenticationMethodUsed">
        <DisplayName>Authentication method used</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>The authentication method used</AdminHelpText>
      </ClaimType>
      <ClaimType Id="IsFederated">
        <DisplayName>IsFederated</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>Is user authenticated via an external identity provider</AdminHelpText>
      </ClaimType>
      <ClaimType Id="IsPhoneMfaRegistered">
        <DisplayName>IsPhoneMfaRegistered</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>Is user registered for MFA</AdminHelpText>
      </ClaimType>
      <ClaimType Id="IsEmailMfaRegistered">
        <DisplayName>IsEmailMfaRegistered</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>Is user registered for MFA</AdminHelpText>
      </ClaimType>
      <ClaimType Id="IsMfaRegistered">
        <DisplayName>IsMfaRegistered</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>Is user registered for MFA</AdminHelpText>
      </ClaimType>
      <ClaimType Id="conditionalAccessClaimCollection">
        <DisplayName>Conditional Access claims</DisplayName>
        <DataType>stringCollection</DataType>
        <AdminHelpText>The list of claims which are the result of CA check</AdminHelpText>
      </ClaimType>
      <ClaimType Id="ReadOnlyEmail">
        <DisplayName>Email Address</DisplayName>
        <DataType>string</DataType>
        <Mask Type="Regex" Regex="(?&lt;=.).(?=.*@)">*</Mask>
        <AdminHelpText>Email address of the user</AdminHelpText>
        <UserHelpText>Email address that can be used to contact you.</UserHelpText>
        <UserInputType>Readonly</UserInputType>
      </ClaimType>
      <ClaimType Id="isLocalAccountSignUp">
        <DisplayName>isLocalAccountSignUp</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="isEmailSignUp">
        <DisplayName>isEmailSignUp</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="isUsernameSignUp">
        <DisplayName>isUsernameSignUp</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="isChangePhoneNumber">
        <DisplayName>isChangePhoneNumber</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="changePhoneSuccessMessage">
        <DisplayName></DisplayName>
        <DataType>string</DataType>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>
      <ClaimType Id="needToPerformMfa">
        <DisplayName>needToPerformMfa</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="needToPerformMfaEmail">
        <DisplayName>needToPerformMfaEmail</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="needToPerformMfaSignIn">
        <DisplayName>needToPerformMfaSignIn</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="needToPerformMfaSignUp">
        <DisplayName>needToPerformMfaSignUp</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <!-- Authenticator enable flag -->
      <ClaimType Id="useTotpForMFA">
        <DisplayName>useTotpForMFA</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="blockUserSignUp">
        <DisplayName>blockUserSignUp</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="sendEmailforMfaRestfulEnabled">
        <DisplayName>sendEmailforMfaRestfulEnabled</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="requireEmailVerificationForSignUp">
        <DisplayName>requireEmailVerificationForSignUp</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="isConditionalAccessOn">
        <DisplayName>isConditionalAccessOn</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="CAChallengeIsMfa">
        <DisplayName>CAChallengeIsMfa</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="CAChallengeIsChgPwd">
        <DisplayName>CAChallengeIsChgPwd</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="CAChallengeIsBlock">
        <DisplayName>CAChallengeIsBlock</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="collectEmailOnSignUp">
        <DisplayName>collectEmailOnSignUp</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="collectEmailOnSignIn">
        <DisplayName>collectEmailOnSignIn</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="UserId">
        <DisplayName>Username</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText />
        <UserHelpText>Your username.</UserHelpText>
        <UserInputType>TextBox</UserInputType>
        <Restriction>
          <Pattern RegularExpression="^[a-zA-Z0-9]+[a-zA-Z0-9_-]*$" HelpText="The username you have provided is not valid. It must begin with an alphabetical character or number, and can only contain alphanumeric characters and the following symbols: _ -" />
        </Restriction>
      </ClaimType>
      <ClaimType Id="numericUserId">
        <DisplayName>Numeric User Identity</DisplayName>
        <DataType>long</DataType>
        <AdminHelpText />
        <UserHelpText />
      </ClaimType>
      <ClaimType Id="logonIdentifier">
        <DisplayName>Username or email address</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Username or email address that the user can use to sign in.</AdminHelpText>
        <UserHelpText>Your username or email address.</UserHelpText>
        <UserInputType>TextBox</UserInputType>
        <!-- TODO Need to renable this so that client-side email validation works. However this causes aserver side failure
        when using username as the logonIdentifier -->
        <!--Restriction>
          <Pattern RegularExpression="^[a-zA-Z0-9!#$%&amp;'+^_`{}~-]+(?:\.[a-zA-Z0-9!#$%&amp;'+^_`{}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$" HelpText="Please enter a valid email address." />
        </Restriction-->
      </ClaimType>
      <ClaimType Id="signInNamePhoneEmail">
        <DisplayName>Phone Number or Email</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Please enter a valid phone number or email address.</UserHelpText>
        <UserInputType>TextBox</UserInputType>
        <PredicateValidationReference Id="phoneOrEmailSignInName" />
      </ClaimType>
      <ClaimType Id="identityProviderAccessToken">
        <DisplayName>Identity Provider Access Token</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OAuth2" PartnerClaimType="idp_access_token" />
          <Protocol Name="OpenIdConnect" PartnerClaimType="idp_access_token" />
        </DefaultPartnerClaimTypes>
        <AdminHelpText>The access token returned by the identity provider.</AdminHelpText>
        <UserHelpText>The access token returned by the identity provider.</UserHelpText>
      </ClaimType>
      <ClaimType Id="identityProviderIDToken">
        <DisplayName>Identity Provider ID Token</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OAuth2" PartnerClaimType="idp_id_token" />
          <Protocol Name="OpenIdConnect" PartnerClaimType="idp_id_token" />
        </DefaultPartnerClaimTypes>
        <AdminHelpText>The ID token returned by the identity provider.</AdminHelpText>
        <UserHelpText>The ID token returned by the identity provider.</UserHelpText>
      </ClaimType>
      <ClaimType Id="tenantId">
        <DisplayName>User's Object's Tenant ID</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OAuth2" PartnerClaimType="tid" />
          <Protocol Name="OpenIdConnect" PartnerClaimType="tid" />
          <Protocol Name="SAML2" PartnerClaimType="http://schemas.microsoft.com/identity/claims/tenantid" />
        </DefaultPartnerClaimTypes>
        <AdminHelpText>Tenant identifier (ID) of the user object in Azure AD.</AdminHelpText>
        <UserHelpText>Tenant identifier (ID) of the user object in Azure AD.</UserHelpText>
      </ClaimType>
      <ClaimType Id="objectId">
        <DisplayName>User's Object ID</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OAuth2" PartnerClaimType="oid" />
          <Protocol Name="OpenIdConnect" PartnerClaimType="oid" />
          <Protocol Name="SAML2" PartnerClaimType="http://schemas.microsoft.com/identity/claims/objectidentifier" />
        </DefaultPartnerClaimTypes>
        <AdminHelpText>Object identifier (ID) of the user object in Azure AD.</AdminHelpText>
        <UserHelpText>Object identifier (ID) of the user object in Azure AD.</UserHelpText>
      </ClaimType>
      <ClaimType Id="phoneNumberAsString">
        <DisplayName>phoneNumberAsString</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="objectIdentityLocalAccountIssuer">
        <DisplayName>objectIdentityLocalAccountIssuer</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="objectIdentity">
        <DisplayName>objectIdentity</DisplayName>
        <DataType>objectIdentity</DataType>
        <AdminHelpText>objectIdentity</AdminHelpText>
        <UserHelpText>objectIdentity</UserHelpText>
      </ClaimType>
      <ClaimType Id="objectIdentityCollection">
        <DisplayName>Identity collection</DisplayName>
        <DataType>objectIdentityCollection</DataType>
        <AdminHelpText>A collection of ObjectIdentity objects</AdminHelpText>
        <UserHelpText>A collection of ObjectIdentity objects</UserHelpText>
      </ClaimType>
      <ClaimType Id="accountEnabled">
        <DisplayName>Account Enabled</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>Specifies whether the user's account is enabled.</AdminHelpText>
        <UserHelpText>Specifies whether your account is enabled.</UserHelpText>
      </ClaimType>
      <ClaimType Id="extension_cpiminternal_useAccountEnabledForPhone">
        <DisplayName>extension_cpiminternal_useAccountEnabledForPhone</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="isAccountEnabledPhonePresent">
        <DisplayName>isAccountEnabledPhonePresent</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="isPhoneSignInBlocked">
        <DisplayName>isPhoneSignInBlocked</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="password">
        <DisplayName>Password</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Enter password</AdminHelpText>
        <UserHelpText>Enter password</UserHelpText>
        <UserInputType>Password</UserInputType>
      </ClaimType>
      <ClaimType Id="newPassword">
        <DisplayName>New Password</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Enter new password</AdminHelpText>
        <UserHelpText>Enter new password</UserHelpText>
        <UserInputType>Password</UserInputType>
        <Restriction>
          <Pattern RegularExpression="^((?=.*[a-z])(?=.*[A-Z])(?=.*\d)|(?=.*[a-z])(?=.*[A-Z])(?=.*[^A-Za-z0-9])|(?=.*[a-z])(?=.*\d)(?=.*[^A-Za-z0-9])|(?=.*[A-Z])(?=.*\d)(?=.*[^A-Za-z0-9]))([A-Za-z\d@#$%^&amp;*\-_+=[\]{}|\\:',?/`~&quot;();!]|\.(?!@)){8,16}$" HelpText="8-16 characters, containing 3 out of 4 of the following: Lowercase characters, uppercase characters, digits (0-9), and one or more of the following symbols: @ # $ % ^ &amp; * - _ + = [ ] { } | \ : ' , ? / ` ~ &quot; ( ) ; ." />
        </Restriction>
      </ClaimType>
      <!-- The password regex is constructed for AAD passwords based on restrictions at https://msdn.microsoft.com/en-us/library/azure/jj943764.aspx

        ^( # one of the following four combinations must appear in the password
         (?=.*[a-z])(?=.*[A-Z])(?=.*\d) |            # matches lower case, upper case or digit
         (?=.*[a-z])(?=.*[A-Z])(?=.*[^A-Za-z0-9]) |  # matches lower case, upper case or special character (i.e. non-alpha or digit)
         (?=.*[a-z])(?=.*\d)(?=.*[^A-Za-z0-9]) |     # matches lower case, digit, or special character
         (?=.*[A-Z])(?=.*\d)(?=.*[^A-Za-z0-9])       # matches upper case, digit, or special character
        )
        ( # The password must match the following restrictions
         [A-Za-z\d@#$%^&*\-_+=[\]{}|\\:',?/`~"();!] |   # The list of all acceptable characters (without .)
         \.(?!@)                                        # or . can appear as long as not followed by @
        ) {8,16}$                                       # the length must be between 8 and 16 chars inclusive

      -->
      <ClaimType Id="reenterPassword">
        <DisplayName>Confirm New Password</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Confirm new password</AdminHelpText>
        <UserHelpText>Confirm new password</UserHelpText>
        <UserInputType>Password</UserInputType>
        <Restriction>
          <Pattern RegularExpression="^((?=.*[a-z])(?=.*[A-Z])(?=.*\d)|(?=.*[a-z])(?=.*[A-Z])(?=.*[^A-Za-z0-9])|(?=.*[a-z])(?=.*\d)(?=.*[^A-Za-z0-9])|(?=.*[A-Z])(?=.*\d)(?=.*[^A-Za-z0-9]))([A-Za-z\d@#$%^&amp;*\-_+=[\]{}|\\:',?/`~&quot;();!]|\.(?!@)){8,16}$" HelpText="8-16 characters, containing 3 out of 4 of the following: Lowercase characters, uppercase characters, digits (0-9), and one or more of the following symbols: @ # $ % ^ &amp; * - _ + = [ ] { } | \ : ' , ? / ` ~ &quot; ( ) ; ." />
        </Restriction>
      </ClaimType>
      <ClaimType Id="passwordPolicies">
        <DisplayName>Password Policies</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Password policies used by MSODS to determine password strength, expiry etc.</AdminHelpText>
        <UserHelpText>Password policies used by MSODS to determine password strength, expiry etc.</UserHelpText>
      </ClaimType>
      <ClaimType Id="sub">
        <DisplayName>Subject</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OpenIdConnect" PartnerClaimType="sub" />
        </DefaultPartnerClaimTypes>
        <AdminHelpText />
        <UserHelpText />
      </ClaimType>
      <ClaimType Id="alternativeSecurityId">
        <DisplayName>AlternativeSecurityId</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText />
        <UserHelpText />
      </ClaimType>
      <ClaimType Id="identityProvider">
        <DisplayName>Identity Provider</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OAuth2" PartnerClaimType="idp" />
          <Protocol Name="OpenIdConnect" PartnerClaimType="idp" />
          <Protocol Name="SAML2" PartnerClaimType="http://schemas.microsoft.com/identity/claims/identityprovider" />
        </DefaultPartnerClaimTypes>
        <AdminHelpText>The social identity provider used by the user to access to your application</AdminHelpText>
        <UserHelpText />
      </ClaimType>
      <ClaimType Id="trustFrameworkPolicy">
        <DisplayName>Trust Framework Policy</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OAuth2" PartnerClaimType="tfp" />
          <Protocol Name="OpenIdConnect" PartnerClaimType="tfp" />
        </DefaultPartnerClaimTypes>
        <AdminHelpText>The trust framework policy that was used to generate the token</AdminHelpText>
        <UserHelpText />
      </ClaimType>
      <ClaimType Id="displayName">
        <DisplayName>Display Name</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OAuth2" PartnerClaimType="unique_name" />
          <Protocol Name="OpenIdConnect" PartnerClaimType="name" />
          <Protocol Name="SAML2" PartnerClaimType="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name" />
        </DefaultPartnerClaimTypes>
        <AdminHelpText>Display Name of the User</AdminHelpText>
        <UserHelpText>Your display name.</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <ClaimType Id="strongAuthenticationPhoneNumber">
        <DisplayName>Phone Number</DisplayName>
        <DataType>string</DataType>
        <Mask Type="Simple">XXX-XXX-</Mask>
        <AdminHelpText>User's telephone number</AdminHelpText>
        <UserHelpText>Your telephone number</UserHelpText>
      </ClaimType>
      <ClaimType Id="Verified.strongAuthenticationPhoneNumber">
        <DisplayName>Verified Phone Number</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OpenIdConnect" PartnerClaimType="phone_number" />
        </DefaultPartnerClaimTypes>
        <Mask Type="Simple">XXX-XXX-</Mask>
        <AdminHelpText>User's office phone number that has been verified</AdminHelpText>
        <UserHelpText>Your office phone number that has been verified</UserHelpText>
      </ClaimType>
      <ClaimType Id="email">
        <DisplayName>Email Address</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OpenIdConnect" PartnerClaimType="email" />
        </DefaultPartnerClaimTypes>
        <AdminHelpText>Email address of the user</AdminHelpText>
        <UserHelpText>Email address that can be used to contact you.</UserHelpText>
        <UserInputType>EmailBox</UserInputType>
        <!--
          This regex is constructed mostly from RFC 5322 for email, with intentional omissions based on discovery of characters that don't work for other services we use
          # the below two lines cover the local part of the email, before the '@' sign
          [a-zA-Z0-9!#$%&amp;'+^_`{}~-]+         # matches lower or upper case letters, digits, and certain special characters
          (?:\.[a-zA-Z0-9!#$%&amp;'+^_`{}~-]+)*  # same list as above, but including an optional '.' character at the beginning, repeated
          # together, the above two lines prevent the '.' character from appearing at the start, end, or twice in a row in the local part
          @                                      # the '@' symbol appears exactly once, seperating the local and domain sections
          (?:[a-zA-Z0-9]                         # matches lower and uppercase letters and digits
          (?:[a-zA-Z0-9-]*                       # same as above, but also allowing '-'
          [a-zA-Z0-9])                           # only lower and uppercase letters and digits again
          ?\.)+                                  # allows for a '.' character to terminate a section
          # the above lines mean that '.' can create segments, and segments can't begin or end with a '-'. Also, no repeating '.' chars
          [a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$
          # the above line is the essentially same as the previous section, but forces the email to not end with a '.'
        -->
        <Restriction>
          <Pattern RegularExpression="^[a-zA-Z0-9!#$%&amp;'+^_`{}~-]+(?:\.[a-zA-Z0-9!#$%&amp;'+^_`{}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$" HelpText="Please enter a valid email address." />
        </Restriction>
      </ClaimType>
      <ClaimType Id="emailCombination">
        <DisplayName>Email Address Combination</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Email address of the user</AdminHelpText>
        <UserHelpText>Email address that can be used to contact you.</UserHelpText>
        <PredicateValidationReference Id="emailCombination" />
      </ClaimType>
      <ClaimType Id="emails">
        <DisplayName>Email Addresses</DisplayName>
        <DataType>stringCollection</DataType>
        <AdminHelpText>Email addresses of the user.</AdminHelpText>
        <UserHelpText>Your email addresses.</UserHelpText>
      </ClaimType>
      <ClaimType Id="signInNamesInfo.emailAddress">
        <DisplayName>Email Address</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Email address that the user can use to sign in.</AdminHelpText>
        <UserHelpText>Email address to use for signing in.</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <ClaimType Id="phoneNumber">
        <DisplayName>Phone Number</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Enter Phone Number</UserHelpText>
        <UserInputType>TextBox</UserInputType>
        <PredicateValidationReference Id="internationalOrNationalPhoneNumber" />
      </ClaimType>
      <ClaimType Id="nationalNumber">
        <DisplayName>Phone Number</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Enter National Phone Number</UserHelpText>
        <UserInputType>TextBox</UserInputType>
        <PredicateValidationReference Id="nationalNumber" />
      </ClaimType>
      <ClaimType Id="oldNationalNumber">
        <DisplayName>Old Phone Number</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Enter National Phone Number</UserHelpText>
        <UserInputType>TextBox</UserInputType>
        <PredicateValidationReference Id="nationalNumber" />
      </ClaimType>
      <ClaimType Id="newNationalNumber">
        <DisplayName>New Phone Number</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Enter National Phone Number</UserHelpText>
        <UserInputType>TextBox</UserInputType>
        <PredicateValidationReference Id="nationalNumber" />
      </ClaimType>
      <ClaimType Id="signInNames.phoneNumber">
        <DisplayName>Phone Number</DisplayName>
        <DataType>phoneNumber</DataType>
      </ClaimType>
      <ClaimType Id="isLocalAccountPhoneSignIn">
        <DisplayName>isLocalAccountPhoneSignIn</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>Parameter to identify if Phone is use for local account signup.</AdminHelpText>
        <UserHelpText>Parameter to identify if Phone is use for local account signup.</UserHelpText>
      </ClaimType>
      <ClaimType Id="isLocalAccountPhoneSignup">
        <DisplayName>isLocalAccountPhoneSignup</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>Parameter to identify if Phone is use for local account signup.</AdminHelpText>
        <UserHelpText>Parameter to identify if Phone is use for local account signup.</UserHelpText>
      </ClaimType>
      <ClaimType Id="isLocalAccountAuthentication">
        <DisplayName>isLocalAccountAuthentication</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>Parameter to identify if local account is the expected authentication mechanism.</AdminHelpText>
        <UserHelpText>Parameter to identify if local account is the expected authentication mechanism.</UserHelpText>
      </ClaimType>
      <ClaimType Id="strongAuthenticationEmailAddress">
        <DisplayName>Email Address</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Email address that the user can use for strong authentication.</AdminHelpText>
        <UserHelpText>Email address to use for strong authentication.</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <ClaimType Id="otherMails">
        <DisplayName>Alternate Email Addresses</DisplayName>
        <DataType>stringCollection</DataType>
        <AdminHelpText>Email addresses that can be used to contact the user.</AdminHelpText>
        <UserHelpText>Email addresses that can be used to contact the user.</UserHelpText>
      </ClaimType>
      <ClaimType Id="userPrincipalName">
        <DisplayName>UserPrincipalName</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OAuth2" PartnerClaimType="upn" />
          <Protocol Name="OpenIdConnect" PartnerClaimType="upn" />
          <Protocol Name="SAML2" PartnerClaimType="http://schemas.microsoft.com/identity/claims/userprincipalname" />
        </DefaultPartnerClaimTypes>
        <AdminHelpText>The user name as stored in the Azure Active Directory.</AdminHelpText>
        <UserHelpText>Your user name as stored in the Azure Active Directory.</UserHelpText>
      </ClaimType>
      <ClaimType Id="upnUserName">
        <DisplayName>UPN User Name</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>The user name for creating user principal name.</AdminHelpText>
        <UserHelpText>The user name for creating user principal name.</UserHelpText>
      </ClaimType>
      <ClaimType Id="mailNickName">
        <DisplayName>MailNickName</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>The user's mail nick name as stored in the Azure Active Directory.</AdminHelpText>
        <UserHelpText>Your mail nick name as stored in the Azure Active Directory.</UserHelpText>
      </ClaimType>
      <ClaimType Id="givenName">
        <DisplayName>Given Name</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OAuth2" PartnerClaimType="given_name" />
          <Protocol Name="OpenIdConnect" PartnerClaimType="given_name" />
          <Protocol Name="SAML2" PartnerClaimType="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname" />
        </DefaultPartnerClaimTypes>
        <AdminHelpText>The user's given name (also known as first name).</AdminHelpText>
        <UserHelpText>Your given name (also known as first name).</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <ClaimType Id="surname">
        <DisplayName>Surname</DisplayName>
        <DataType>string</DataType>
        <DefaultPartnerClaimTypes>
          <Protocol Name="OAuth2" PartnerClaimType="family_name" />
          <Protocol Name="OpenIdConnect" PartnerClaimType="family_name" />
          <Protocol Name="SAML2" PartnerClaimType="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname" />
        </DefaultPartnerClaimTypes>
        <AdminHelpText>The user's surname (also known as family name or last name).</AdminHelpText>
        <UserHelpText>Your surname (also known as family name or last name).</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <ClaimType Id="jobTitle">
        <DisplayName>Job Title</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>The user's job title.</AdminHelpText>
        <UserHelpText>Your job title.</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <ClaimType Id="streetAddress">
        <DisplayName>Street Address</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>The street address where the user is located</AdminHelpText>
        <UserHelpText>The street address at which you are located.</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <ClaimType Id="city">
        <DisplayName>City</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>The city in which the user is located.</AdminHelpText>
        <UserHelpText>The city in which you are located.</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <ClaimType Id="postalCode">
        <DisplayName>Postal Code</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>The postal code of the user's address.</AdminHelpText>
        <UserHelpText>The postal code of your address.</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <ClaimType Id="state">
        <DisplayName>State/Province</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>The state or province in user's address.</AdminHelpText>
        <UserHelpText>Your residential state or province.</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <ClaimType Id="ncaslice">
        <DisplayName>Evo slice query string parameter</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText />
        <UserHelpText>Run against evo test or prod slice.</UserHelpText>
      </ClaimType>
      <ClaimType Id="country">
        <!-- Do not change the display name without consulting geo-political guidelines. The list below contains both countries and regions and
          thus the display name must appear as country/region. See http://gpweb/KBArticle/ViewHtmlPage/1 for more details. -->
        <DisplayName>Country/Region</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>The country/region in which the user is located.</AdminHelpText>
        <UserHelpText>The country/region in which you are located.</UserHelpText>
        <UserInputType>DropdownSingleSelect</UserInputType>
        <Restriction>
          <!-- The following is the approved short-form Microsoft country list, taken from http://gpweb/marketreadiness/officialCountryRegion -->
          <Enumeration Text="Afghanistan" Value="Afghanistan" />
          <Enumeration Text="Åland Islands" Value="Åland Islands" />
          <Enumeration Text="Albania" Value="Albania" />
          <Enumeration Text="Algeria" Value="Algeria" />
          <Enumeration Text="American Samoa" Value="American Samoa" />
          <Enumeration Text="Andorra" Value="Andorra" />
          <Enumeration Text="Angola" Value="Angola" />
          <Enumeration Text="Anguilla" Value="Anguilla" />
          <Enumeration Text="Antarctica" Value="Antarctica" />
          <Enumeration Text="Antigua and Barbuda" Value="Antigua and Barbuda" />
          <Enumeration Text="Argentina" Value="Argentina" />
          <Enumeration Text="Armenia" Value="Armenia" />
          <Enumeration Text="Aruba" Value="Aruba" />
          <Enumeration Text="Australia" Value="Australia" />
          <Enumeration Text="Austria" Value="Austria" />
          <Enumeration Text="Azerbaijan" Value="Azerbaijan" />
          <Enumeration Text="Bahamas" Value="Bahamas" />
          <Enumeration Text="Bahrain" Value="Bahrain" />
          <Enumeration Text="Bangladesh" Value="Bangladesh" />
          <Enumeration Text="Barbados" Value="Barbados" />
          <Enumeration Text="Belarus" Value="Belarus" />
          <Enumeration Text="Belgium" Value="Belgium" />
          <Enumeration Text="Belize" Value="Belize" />
          <Enumeration Text="Benin" Value="Benin" />
          <Enumeration Text="Bermuda" Value="Bermuda" />
          <Enumeration Text="Bhutan" Value="Bhutan" />
          <Enumeration Text="Bolivia" Value="Bolivia" />
          <Enumeration Text="Bonaire" Value="Bonaire" />
          <Enumeration Text="Bosnia and Herzegovina" Value="Bosnia and Herzegovina" />
          <Enumeration Text="Botswana" Value="Botswana" />
          <Enumeration Text="Bouvet Island" Value="Bouvet Island" />
          <Enumeration Text="Brazil" Value="Brazil" />
          <Enumeration Text="British Indian Ocean Territory" Value="British Indian Ocean Territory" />
          <Enumeration Text="British Virgin Islands" Value="British Virgin Islands" />
          <Enumeration Text="Brunei" Value="Brunei" />
          <Enumeration Text="Bulgaria" Value="Bulgaria" />
          <Enumeration Text="Burkina Faso" Value="Burkina Faso" />
          <Enumeration Text="Burundi" Value="Burundi" />
          <Enumeration Text="Cabo Verde" Value="Cabo Verde" />
          <Enumeration Text="Cambodia" Value="Cambodia" />
          <Enumeration Text="Cameroon" Value="Cameroon" />
          <Enumeration Text="Canada" Value="Canada" />
          <Enumeration Text="Cayman Islands" Value="Cayman Islands" />
          <Enumeration Text="Central African Republic" Value="Central African Republic" />
          <Enumeration Text="Chad" Value="Chad" />
          <Enumeration Text="Chile" Value="Chile" />
          <Enumeration Text="China" Value="China" />
          <Enumeration Text="Christmas Island" Value="Christmas Island" />
          <Enumeration Text="Cocos (Keeling) Islands" Value="Cocos (Keeling) Islands" />
          <Enumeration Text="Colombia" Value="Colombia" />
          <Enumeration Text="Comoros" Value="Comoros" />
          <Enumeration Text="Congo" Value="Congo" />
          <Enumeration Text="Congo (DRC)" Value="Congo (DRC)" />
          <Enumeration Text="Cook Islands" Value="Cook Islands" />
          <Enumeration Text="Costa Rica" Value="Costa Rica" />
          <Enumeration Text="Côte d’Ivoire" Value="Côte d’Ivoire" />
          <Enumeration Text="Croatia" Value="Croatia" />
          <Enumeration Text="Cuba" Value="Cuba" />
          <Enumeration Text="Curaçao" Value="Curaçao" />
          <Enumeration Text="Cyprus" Value="Cyprus" />
          <Enumeration Text="Czech Republic" Value="Czech Republic" />
          <Enumeration Text="Denmark" Value="Denmark" />
          <Enumeration Text="Djibouti" Value="Djibouti" />
          <Enumeration Text="Dominica" Value="Dominica" />
          <Enumeration Text="Dominican Republic" Value="Dominican Republic" />
          <Enumeration Text="Ecuador" Value="Ecuador" />
          <Enumeration Text="Egypt" Value="Egypt" />
          <Enumeration Text="El Salvador" Value="El Salvador" />
          <Enumeration Text="Equatorial Guinea" Value="Equatorial Guinea" />
          <Enumeration Text="Eritrea" Value="Eritrea" />
          <Enumeration Text="Estonia" Value="Estonia" />
          <Enumeration Text="Ethiopia" Value="Ethiopia" />
          <Enumeration Text="Falkland Islands" Value="Falkland Islands" />
          <Enumeration Text="Faroe Islands" Value="Faroe Islands" />
          <Enumeration Text="Fiji" Value="Fiji" />
          <Enumeration Text="Finland" Value="Finland" />
          <Enumeration Text="France" Value="France" />
          <Enumeration Text="French Guiana" Value="French Guiana" />
          <Enumeration Text="French Polynesia" Value="French Polynesia" />
          <Enumeration Text="French Southern Territories" Value="French Southern Territories" />
          <Enumeration Text="Gabon" Value="Gabon" />
          <Enumeration Text="Gambia" Value="Gambia" />
          <Enumeration Text="Georgia" Value="Georgia" />
          <Enumeration Text="Germany" Value="Germany" />
          <Enumeration Text="Ghana" Value="Ghana" />
          <Enumeration Text="Gibraltar" Value="Gibraltar" />
          <Enumeration Text="Greece" Value="Greece" />
          <Enumeration Text="Greenland" Value="Greenland" />
          <Enumeration Text="Grenada" Value="Grenada" />
          <Enumeration Text="Guadeloupe" Value="Guadeloupe" />
          <Enumeration Text="Guam" Value="Guam" />
          <Enumeration Text="Guatemala" Value="Guatemala" />
          <Enumeration Text="Guernsey" Value="Guernsey" />
          <Enumeration Text="Guinea" Value="Guinea" />
          <Enumeration Text="Guinea-Bissau" Value="Guinea-Bissau" />
          <Enumeration Text="Guyana" Value="Guyana" />
          <Enumeration Text="Haiti" Value="Haiti" />
          <Enumeration Text="Heard Island and McDonald Islands" Value="Heard Island and McDonald Islands" />
          <Enumeration Text="Honduras" Value="Honduras" />
          <Enumeration Text="Hong Kong SAR" Value="Hong Kong SAR" />
          <Enumeration Text="Hungary" Value="Hungary" />
          <Enumeration Text="Iceland" Value="Iceland" />
          <Enumeration Text="India" Value="India" />
          <Enumeration Text="Indonesia" Value="Indonesia" />
          <Enumeration Text="Iran" Value="Iran" />
          <Enumeration Text="Iraq" Value="Iraq" />
          <Enumeration Text="Ireland" Value="Ireland" />
          <Enumeration Text="Isle of Man" Value="Isle of Man" />
          <Enumeration Text="Israel" Value="Israel" />
          <Enumeration Text="Italy" Value="Italy" />
          <Enumeration Text="Jamaica" Value="Jamaica" />
          <Enumeration Text="Jan Mayen" Value="Jan Mayen" />
          <Enumeration Text="Japan" Value="Japan" />
          <Enumeration Text="Jersey" Value="Jersey" />
          <Enumeration Text="Jordan" Value="Jordan" />
          <Enumeration Text="Kazakhstan" Value="Kazakhstan" />
          <Enumeration Text="Kenya" Value="Kenya" />
          <Enumeration Text="Kiribati" Value="Kiribati" />
          <Enumeration Text="Korea" Value="Korea" />
          <Enumeration Text="Kosovo" Value="Kosovo" />
          <Enumeration Text="Kuwait" Value="Kuwait" />
          <Enumeration Text="Kyrgyzstan" Value="Kyrgyzstan" />
          <Enumeration Text="Laos" Value="Laos" />
          <Enumeration Text="Latvia" Value="Latvia" />
          <Enumeration Text="Lebanon" Value="Lebanon" />
          <Enumeration Text="Lesotho" Value="Lesotho" />
          <Enumeration Text="Liberia" Value="Liberia" />
          <Enumeration Text="Libya" Value="Libya" />
          <Enumeration Text="Liechtenstein" Value="Liechtenstein" />
          <Enumeration Text="Lithuania" Value="Lithuania" />
          <Enumeration Text="Luxembourg" Value="Luxembourg" />
          <Enumeration Text="Macao SAR" Value="Macao SAR" />
          <Enumeration Text="Macedonia, FYRO" Value="Macedonia, FYRO" />
          <Enumeration Text="Madagascar" Value="Madagascar" />
          <Enumeration Text="Malawi" Value="Malawi" />
          <Enumeration Text="Malaysia" Value="Malaysia" />
          <Enumeration Text="Maldives" Value="Maldives" />
          <Enumeration Text="Mali" Value="Mali" />
          <Enumeration Text="Malta" Value="Malta" />
          <Enumeration Text="Marshall Islands" Value="Marshall Islands" />
          <Enumeration Text="Martinique" Value="Martinique" />
          <Enumeration Text="Mauritania" Value="Mauritania" />
          <Enumeration Text="Mauritius" Value="Mauritius" />
          <Enumeration Text="Mayotte" Value="Mayotte" />
          <Enumeration Text="Mexico" Value="Mexico" />
          <Enumeration Text="Micronesia" Value="Micronesia" />
          <Enumeration Text="Moldova" Value="Moldova" />
          <Enumeration Text="Monaco" Value="Monaco" />
          <Enumeration Text="Mongolia" Value="Mongolia" />
          <Enumeration Text="Montenegro" Value="Montenegro" />
          <Enumeration Text="Montserrat" Value="Montserrat" />
          <Enumeration Text="Morocco" Value="Morocco" />
          <Enumeration Text="Mozambique" Value="Mozambique" />
          <Enumeration Text="Myanmar" Value="Myanmar" />
          <Enumeration Text="Namibia" Value="Namibia" />
          <Enumeration Text="Nauru" Value="Nauru" />
          <Enumeration Text="Nepal" Value="Nepal" />
          <Enumeration Text="Netherlands" Value="Netherlands" />
          <Enumeration Text="New Caledonia" Value="New Caledonia" />
          <Enumeration Text="New Zealand" Value="New Zealand" />
          <Enumeration Text="Nicaragua" Value="Nicaragua" />
          <Enumeration Text="Niger" Value="Niger" />
          <Enumeration Text="Nigeria" Value="Nigeria" />
          <Enumeration Text="Niue" Value="Niue" />
          <Enumeration Text="Norfolk Island" Value="Norfolk Island" />
          <Enumeration Text="North Korea" Value="North Korea" />
          <Enumeration Text="Northern Mariana Islands" Value="Northern Mariana Islands" />
          <Enumeration Text="Norway" Value="Norway" />
          <Enumeration Text="Oman" Value="Oman" />
          <Enumeration Text="Pakistan" Value="Pakistan" />
          <Enumeration Text="Palau" Value="Palau" />
          <Enumeration Text="Palestinian Authority" Value="Palestinian Authority" />
          <Enumeration Text="Panama" Value="Panama" />
          <Enumeration Text="Papua New Guinea" Value="Papua New Guinea" />
          <Enumeration Text="Paraguay" Value="Paraguay" />
          <Enumeration Text="Peru" Value="Peru" />
          <Enumeration Text="Philippines" Value="Philippines" />
          <Enumeration Text="Pitcairn Islands" Value="Pitcairn Islands" />
          <Enumeration Text="Poland" Value="Poland" />
          <Enumeration Text="Portugal" Value="Portugal" />
          <Enumeration Text="Puerto Rico" Value="Puerto Rico" />
          <Enumeration Text="Qatar" Value="Qatar" />
          <Enumeration Text="Réunion" Value="Réunion" />
          <Enumeration Text="Romania" Value="Romania" />
          <Enumeration Text="Russia" Value="Russia" />
          <Enumeration Text="Rwanda" Value="Rwanda" />
          <Enumeration Text="Saba" Value="Saba" />
          <Enumeration Text="Saint Barthélemy" Value="Saint Barthélemy" />
          <Enumeration Text="Saint Kitts and Nevis" Value="Saint Kitts and Nevis" />
          <Enumeration Text="Saint Lucia" Value="Saint Lucia" />
          <Enumeration Text="Saint Martin" Value="Saint Martin" />
          <Enumeration Text="Saint Pierre and Miquelon" Value="Saint Pierre and Miquelon" />
          <Enumeration Text="Saint Vincent and the Grenadines" Value="Saint Vincent and the Grenadines" />
          <Enumeration Text="Samoa" Value="Samoa" />
          <Enumeration Text="San Marino" Value="San Marino" />
          <Enumeration Text="São Tomé and Príncipe" Value="São Tomé and Príncipe" />
          <Enumeration Text="Saudi Arabia" Value="Saudi Arabia" />
          <Enumeration Text="Senegal" Value="Senegal" />
          <Enumeration Text="Serbia" Value="Serbia" />
          <Enumeration Text="Seychelles" Value="Seychelles" />
          <Enumeration Text="Sierra Leone" Value="Sierra Leone" />
          <Enumeration Text="Singapore" Value="Singapore" />
          <Enumeration Text="Sint Eustatius" Value="Sint Eustatius" />
          <Enumeration Text="Sint Maarten" Value="Sint Maarten" />
          <Enumeration Text="Slovakia" Value="Slovakia" />
          <Enumeration Text="Slovenia" Value="Slovenia" />
          <Enumeration Text="Solomon Islands" Value="Solomon Islands" />
          <Enumeration Text="Somalia" Value="Somalia" />
          <Enumeration Text="South Africa" Value="South Africa" />
          <Enumeration Text="South Georgia and the South Sandwich Islands" Value="South Georgia and the South Sandwich Islands" />
          <Enumeration Text="South Sudan" Value="South Sudan" />
          <Enumeration Text="Spain" Value="Spain" />
          <Enumeration Text="Sri Lanka" Value="Sri Lanka" />
          <Enumeration Text="St Helena, Ascension, Tristan da Cunha" Value="St Helena, Ascension, Tristan da Cunha" />
          <Enumeration Text="Sudan" Value="Sudan" />
          <Enumeration Text="Suriname" Value="Suriname" />
          <Enumeration Text="Svalbard" Value="Svalbard" />
          <Enumeration Text="Swaziland" Value="Swaziland" />
          <Enumeration Text="Sweden" Value="Sweden" />
          <Enumeration Text="Switzerland" Value="Switzerland" />
          <Enumeration Text="Syria" Value="Syria" />
          <Enumeration Text="Taiwan" Value="Taiwan" />
          <Enumeration Text="Tajikistan" Value="Tajikistan" />
          <Enumeration Text="Tanzania" Value="Tanzania" />
          <Enumeration Text="Thailand" Value="Thailand" />
          <Enumeration Text="Timor-Leste" Value="Timor-Leste" />
          <Enumeration Text="Togo" Value="Togo" />
          <Enumeration Text="Tokelau" Value="Tokelau" />
          <Enumeration Text="Tonga" Value="Tonga" />
          <Enumeration Text="Trinidad and Tobago" Value="Trinidad and Tobago" />
          <Enumeration Text="Tunisia" Value="Tunisia" />
          <Enumeration Text="Turkey" Value="Turkey" />
          <Enumeration Text="Turkmenistan" Value="Turkmenistan" />
          <Enumeration Text="Turks and Caicos Islands" Value="Turks and Caicos Islands" />
          <Enumeration Text="Tuvalu" Value="Tuvalu" />
          <Enumeration Text="U.S. Outlying Islands" Value="U.S. Outlying Islands" />
          <Enumeration Text="U.S. Virgin Islands" Value="U.S. Virgin Islands" />
          <Enumeration Text="Uganda" Value="Uganda" />
          <Enumeration Text="Ukraine" Value="Ukraine" />
          <Enumeration Text="United Arab Emirates" Value="United Arab Emirates" />
          <Enumeration Text="United Kingdom" Value="United Kingdom" />
          <Enumeration Text="United States" Value="United States" />
          <Enumeration Text="Uruguay" Value="Uruguay" />
          <Enumeration Text="Uzbekistan" Value="Uzbekistan" />
          <Enumeration Text="Vanuatu" Value="Vanuatu" />
          <Enumeration Text="Vatican City" Value="Vatican City" />
          <Enumeration Text="Venezuela" Value="Venezuela" />
          <Enumeration Text="Vietnam" Value="Vietnam" />
          <Enumeration Text="Wallis and Futuna" Value="Wallis and Futuna" />
          <Enumeration Text="Yemen" Value="Yemen" />
          <Enumeration Text="Zambia" Value="Zambia" />
          <Enumeration Text="Zimbabwe" Value="Zimbabwe" />
        </Restriction>
      </ClaimType>
      <ClaimType Id="newUser">
        <DisplayName>User is new</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>True, if the user has just signed-up for your application</AdminHelpText>
        <UserHelpText />
      </ClaimType>
      <ClaimType Id="IP-Address">
        <DisplayName>IP Address</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText />
        <UserHelpText />
      </ClaimType>
      <ClaimType Id="executed-SelfAsserted-Input">
        <DisplayName>Executed-SelfAsserted-Input</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>A claim that specifies whether attributes were collected from the user.</AdminHelpText>
        <UserHelpText>A claim that specifies whether attributes were collected from the user.</UserHelpText>
      </ClaimType>
      <ClaimType Id="executed-PhoneFactor">
        <DisplayName>Executed-PhoneFactor</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>A claim that specifies whether MFA has been executed.</AdminHelpText>
        <UserHelpText />
      </ClaimType>
      <ClaimType Id="executed-PhoneFactor-Input">
        <DisplayName>Executed-PhoneFactor-Input</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>A claim that specifies whether a new phone number was collected from the user.</AdminHelpText>
        <UserHelpText>A claim that specifies whether a new phone number was collected from the user.</UserHelpText>
      </ClaimType>
      <ClaimType Id="executed-PhoneFactor-Input-V3">
        <DisplayName>executed-PhoneFactor-Input-V3</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>True, if the a strong authentication phone number was collected from the user</AdminHelpText>
        <UserHelpText />
      </ClaimType>
      <ClaimType Id="authenticationSource">
        <DisplayName>AuthenticationSource</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Specifies whether the user was authenticated at Social IDP or EvoSTS or local account.</AdminHelpText>
        <UserHelpText>Specifies whether the user was authenticated at Social IDP or EvoSTS or local account.</UserHelpText>
      </ClaimType>
      <ClaimType Id="amr">
        <DisplayName>amr</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Authentication methods requested.</AdminHelpText>
        <UserHelpText>Authentication methods requested.</UserHelpText>
      </ClaimType>
      <ClaimType Id="nux">
        <DisplayName>nux</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Special parameter passed to EvoSTS.</AdminHelpText>
        <UserHelpText>Special parameter passed to EvoSTS.</UserHelpText>
      </ClaimType>
      <ClaimType Id="nca">
        <DisplayName>nca</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Special parameter passed to EvoSTS.</AdminHelpText>
        <UserHelpText>Special parameter passed to EvoSTS.</UserHelpText>
      </ClaimType>
      <ClaimType Id="prompt">
        <DisplayName>prompt</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Special parameter passed to EvoSTS.</AdminHelpText>
        <UserHelpText>Special parameter passed to EvoSTS.</UserHelpText>
      </ClaimType>
      <ClaimType Id="mkt">
        <DisplayName>mkt</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Special parameter passed to EvoSTS.</AdminHelpText>
        <UserHelpText>Special parameter passed to EvoSTS.</UserHelpText>
      </ClaimType>
      <ClaimType Id="lc">
        <DisplayName>lc</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Special parameter passed to EvoSTS.</AdminHelpText>
        <UserHelpText>Special parameter passed to EvoSTS.</UserHelpText>
      </ClaimType>
      <ClaimType Id="grant_type">
        <DisplayName>grant_type</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Special parameter passed to EvoSTS.</AdminHelpText>
        <UserHelpText>Special parameter passed to EvoSTS.</UserHelpText>
      </ClaimType>
      <ClaimType Id="scope">
        <DisplayName>scope</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Special parameter passed to EvoSTS.</AdminHelpText>
        <UserHelpText>Special parameter passed to EvoSTS.</UserHelpText>
      </ClaimType>
      <ClaimType Id="client_id">
        <DisplayName>client_id</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Special parameter passed to EvoSTS.</AdminHelpText>
        <UserHelpText>Special parameter passed to EvoSTS.</UserHelpText>
      </ClaimType>
      <ClaimType Id="objectIdFromSession">
        <DisplayName>objectIdFromSession</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>Parameter provided by the default session management provider to indicate that the object id has been retrieved from an SSO session.</AdminHelpText>
        <UserHelpText>Parameter provided by the default session management provider to indicate that the object id has been retrieved from an SSO session.</UserHelpText>
      </ClaimType>
      <ClaimType Id="isActiveMFASession">
        <DisplayName>isActiveMFASession</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>Parameter provided by the MFA session management to indicate that the user has an active MFA session.</AdminHelpText>
        <UserHelpText>Parameter provided by the MFA session management to indicate that the user has an active MFA session.</UserHelpText>
      </ClaimType>
      <ClaimType Id="localAccountUserCreatedInAAD">
        <DisplayName>localAccountUserCreatedInAAD</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>Internal parameter used for skipping AAD-UserWriteUsingObjectId during local account sign up none-SSO session in sign up or sign in user journey.</AdminHelpText>
        <UserHelpText>Internal parameter used for skipping AAD-UserWriteUsingObjectId during local account sign up none-SSO session in sign up or sign in user journey.</UserHelpText>
      </ClaimType>
      <ClaimType Id="refreshTokenIssuedOnDateTime">
        <DisplayName>refreshTokenIssuedOnDateTime</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Internal parameter used for determine if the user should be permitted to reauthenticate silently via their existing refresh token.</AdminHelpText>
        <UserHelpText>Internal parameter used for determine if the user should be permitted to reauthenticate silently via their existing refresh token.</UserHelpText>
      </ClaimType>
      <ClaimType Id="refreshTokensValidFromDateTime">
        <DisplayName>refreshTokensValidFromDateTime</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>Internal parameter used for determine if the user should be permitted to reauthenticate silently via their existing refresh token.</AdminHelpText>
        <UserHelpText>Internal parameter used for determine if the user should be permitted to reauthenticate silently via their existing refresh token.</UserHelpText>
      </ClaimType>
      <ClaimType Id="legalAgeGroupClassification">
        <DisplayName>Legal Age Group Classification</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>The legal age group that a user falls into based on their country and date of birth</AdminHelpText>
        <UserHelpText>The legal age group that a user falls into based on their country and date of birth</UserHelpText>
      </ClaimType>
      <ClaimType Id="consentProvidedForMinor">
        <DisplayName>ConsentProvidedForMinor</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>The consent provided for a minor user</AdminHelpText>
        <UserHelpText>The consent provided for a minor user</UserHelpText>
      </ClaimType>
      <ClaimType Id="ageGroup">
        <DisplayName>AgeGroup</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>The ageGroup value evaluated from user's date of birth and country of legal residence</AdminHelpText>
        <UserHelpText>The ageGroup value evaluated from user's date of birth and country of legal residence</UserHelpText>
      </ClaimType>
      <ClaimType Id="ageGroup_current">
        <DisplayName>Re-Evaluated AgeGroup</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>The ageGroup value re-evaluated from user's date of birth and country of legal residence</AdminHelpText>
        <UserHelpText>The ageGroup value re-evaluated from user's date of birth and country of legal residence</UserHelpText>
      </ClaimType>
      <ClaimType Id="consentProvidedForMinor_current">
        <DisplayName>Re-Evaluated ConsentProvidedForMinor</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>The consentProvidedForMinor value re-evaluated from user's date of birth and country of legal residence</AdminHelpText>
        <UserHelpText>The consentProvidedForMinor value re-evaluated from user's date of birth and country of legal residence</UserHelpText>
      </ClaimType>
      <ClaimType Id="cpiminternal_dateOfBirth">
        <DisplayName>Date of Birth</DisplayName>
        <DataType>date</DataType>
        <AdminHelpText>The user's date of birth.</AdminHelpText>
        <UserHelpText>Your date of birth.</UserHelpText>
        <UserInputType>DateTimeDropdown</UserInputType>
        <PredicateValidationReference Id="DefaultDateRange" />
      </ClaimType>
      <ClaimType Id="countryCode">
        <DisplayName>Country</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Enter Country</UserHelpText>
        <UserInputType>DropdownSingleSelect</UserInputType>
        <Restriction>
          <Enumeration Text="Albania(+355)" Value="AL" />
          <Enumeration Text="Algeria(+213)" Value="DZ" />
          <Enumeration Text="American Samoa(+1684)" Value="AS" />
          <Enumeration Text="Andorra(+376)" Value="AD" />
          <Enumeration Text="Angola(+244)" Value="AO" />
          <Enumeration Text="Anguilla(+1264)" Value="AI" />
          <Enumeration Text="Antarctica(+672)" Value="AQ" />
          <Enumeration Text="Antigua and Barbuda(+1268)" Value="AG" />
          <Enumeration Text="Argentina(+54)" Value="AR" />
          <Enumeration Text="Armenia(+374)" Value="AM" />
          <Enumeration Text="Aruba(+297)" Value="AW" />
          <Enumeration Text="Australia(+61)" Value="AU" />
          <Enumeration Text="Austria(+43)" Value="AT" />
          <Enumeration Text="Azerbaijan(+994)" Value="AZ" />
          <Enumeration Text="Bahamas(+1242)" Value="BS" />
          <Enumeration Text="Bahrain(+973)" Value="BH" />
          <Enumeration Text="Bangladesh(+880)" Value="BD" />
          <Enumeration Text="Barbados(+1246)" Value="BB" />
          <Enumeration Text="Belarus(+375)" Value="BY" />
          <Enumeration Text="Belgium(+32)" Value="BE" />
          <Enumeration Text="Belize(+501)" Value="BZ" />
          <Enumeration Text="Benin(+229)" Value="BJ" />
          <Enumeration Text="Bermuda(+1441)" Value="BM" />
          <Enumeration Text="Bhutan(+975)" Value="BT" />
          <Enumeration Text="Bolivia(+591)" Value="BO" />
          <Enumeration Text="Bonaire, Sint Eustatius and Saba(+599)" Value="BQ" />
          <Enumeration Text="Bosnia and Herzegovina(+387)" Value="BA" />
          <Enumeration Text="Botswana(+267)" Value="BW" />
          <Enumeration Text="Brazil(+55)" Value="BR" />
          <Enumeration Text="British Virgin Islands (+1284)" Value="VG" />
          <Enumeration Text="Brunei Darussalam(+673)" Value="BN" />
          <Enumeration Text="Bulgaria(+359)" Value="BG" />
          <Enumeration Text="Burkina Faso(+226)" Value="BF" />
          <Enumeration Text="Burundi(+257)" Value="BI" />
          <Enumeration Text="Cambodia(+855)" Value="KH" />
          <Enumeration Text="Cameroon(+237)" Value="CM" />
          <Enumeration Text="Canada(+1)" Value="CA" />
          <Enumeration Text="Cape Verde(+238)" Value="CV" />
          <Enumeration Text="Cayman Islands(+1345)" Value="KY" />
          <Enumeration Text="Central African Republic(+236)" Value="CF" />
          <Enumeration Text="Chad(+235)" Value="TD" />
          <Enumeration Text="Chile(+56)" Value="CL" />
          <Enumeration Text="China(+86)" Value="CN" />
          <Enumeration Text="Colombia(+57)" Value="CO" />
          <Enumeration Text="Comoros(+269)" Value="KM" />
          <Enumeration Text="Congo(+242)" Value="CG" />
          <Enumeration Text="Cook Islands(+682)" Value="CK" />
          <Enumeration Text="Costa Rica(+506)" Value="CR" />
          <Enumeration Text="Côte d'Ivoire(+225)" Value="CI" />
          <Enumeration Text="Croatia(+385)" Value="HR" />
          <Enumeration Text="Cuba(+53)" Value="CU" />
          <Enumeration Text="Curaçao(+599)" Value="CW" />
          <Enumeration Text="Cyprus(+357)" Value="CY" />
          <Enumeration Text="Czech Republic(+420)" Value="CZ" />
          <Enumeration Text="Congo (+243)" Value="CD" />
          <Enumeration Text="Denmark(+45)" Value="DK" />
          <Enumeration Text="Djibouti(+253)" Value="DJ" />
          <Enumeration Text="Dominica(+1767)" Value="DM" />
          <Enumeration Text="Dominican Republic(+1)" Value="DO" />
          <Enumeration Text="Ecuador(+593)" Value="EC" />
          <Enumeration Text="Egypt(+20)" Value="EG" />
          <Enumeration Text="El Salvador(+503)" Value="SV" />
          <Enumeration Text="Equatorial Guinea(+240)" Value="GQ" />
          <Enumeration Text="Eritrea(+291)" Value="ER" />
          <Enumeration Text="Estonia(+372)" Value="EE" />
          <Enumeration Text="Ethiopia(+251)" Value="ET" />
          <Enumeration Text="Falkland Islands (Malvinas)(+500)" Value="FK" />
          <Enumeration Text="Faroe Islands(+298)" Value="FO" />
          <Enumeration Text="Fiji(+679)" Value="FJ" />
          <Enumeration Text="Finland(+358)" Value="FI" />
          <Enumeration Text="France(+33)" Value="FR" />
          <Enumeration Text="French Guiana(+594)" Value="GF" />
          <Enumeration Text="French Polynesia(+689)" Value="PF" />
          <Enumeration Text="Gabon(+241)" Value="GA" />
          <Enumeration Text="Gambia(+220)" Value="GM" />
          <Enumeration Text="Georgia(+995)" Value="GE" />
          <Enumeration Text="Germany(+49)" Value="DE" />
          <Enumeration Text="Ghana(+233)" Value="GH" />
          <Enumeration Text="Gibraltar(+350)" Value="GI" />
          <Enumeration Text="Greece(+30)" Value="GR" />
          <Enumeration Text="Greenland(+299)" Value="GL" />
          <Enumeration Text="Grenada(+1473)" Value="GD" />
          <Enumeration Text="Guadeloupe(+590)" Value="GP" />
          <Enumeration Text="Guam(+1671)" Value="GU" />
          <Enumeration Text="Guatemala(+502)" Value="GT" />
          <Enumeration Text="Guinea(+224)" Value="GN" />
          <Enumeration Text="Guinea-Bissau(+245)" Value="GW" />
          <Enumeration Text="Guyana(+592)" Value="GY" />
          <Enumeration Text="Haiti(+509)" Value="HT" />
          <Enumeration Text="Honduras(+504)" Value="HN" />
          <Enumeration Text="Hong Kong(+852)" Value="HK" />
          <Enumeration Text="Hungary(+36)" Value="HU" />
          <Enumeration Text="Iceland(+354)" Value="IS" />
          <Enumeration Text="India(+91)" Value="IN" />
          <Enumeration Text="Indonesia(+62)" Value="ID" />
          <Enumeration Text="Iran(+98)" Value="IR" />
          <Enumeration Text="Iraq(+964)" Value="IQ" />
          <Enumeration Text="Ireland(+353)" Value="IE" />
          <Enumeration Text="Israel(+972)" Value="IL" />
          <Enumeration Text="Italy(+39)" Value="IT" />
          <Enumeration Text="Jamaica(+1)" Value="JM" />
          <Enumeration Text="Japan(+81)" Value="JP" />
          <Enumeration Text="Jordan(+962)" Value="JO" />
          <Enumeration Text="Kazakhstan(+7)" Value="KZ" />
          <Enumeration Text="Kenya(+254)" Value="KE" />
          <Enumeration Text="Kiribati(+686)" Value="KI" />
          <Enumeration Text="Kosovo(+383)" Value="XK" />
          <Enumeration Text="Kuwait(+965)" Value="KW" />
          <Enumeration Text="Kyrgyzstan(+996)" Value="KG" />
          <Enumeration Text="Lao People's Democratic Republic(+856)" Value="LA" />
          <Enumeration Text="Latvia(+371)" Value="LV" />
          <Enumeration Text="Lebanon(+961)" Value="LB" />
          <Enumeration Text="Lesotho(+266)" Value="LS" />
          <Enumeration Text="Liberia(+231)" Value="LR" />
          <Enumeration Text="Libya(+218)" Value="LY" />
          <Enumeration Text="Liechtenstein(+423)" Value="LI" />
          <Enumeration Text="Lithuania(+370)" Value="LT" />
          <Enumeration Text="Luxembourg(+352)" Value="LU" />
          <Enumeration Text="Macao(+853)" Value="MO" />
          <Enumeration Text="North Macedonia, Republic of (+389)" Value="MK" />
          <Enumeration Text="Madagascar(+261)" Value="MG" />
          <Enumeration Text="Malawi(+265)" Value="MW" />
          <Enumeration Text="Malaysia(+60)" Value="MY" />
          <Enumeration Text="Maldives(+960)" Value="MV" />
          <Enumeration Text="Mali(+223)" Value="ML" />
          <Enumeration Text="Malta(+356)" Value="MT" />
          <Enumeration Text="Marshall Islands(+692)" Value="MH" />
          <Enumeration Text="Martinique(+596)" Value="MQ" />
          <Enumeration Text="Mauritania(+222)" Value="MR" />
          <Enumeration Text="Mauritius(+230)" Value="MU" />
          <Enumeration Text="Mexico(+52)" Value="MX" />
          <Enumeration Text="Micronesia(+691)" Value="FM" />
          <Enumeration Text="Moldova, Republic of(+373)" Value="MD" />
          <Enumeration Text="Monaco(+377)" Value="MC" />
          <Enumeration Text="Mongolia(+976)" Value="MN" />
          <Enumeration Text="Montenegro(+382)" Value="ME" />
          <Enumeration Text="Montserrat(+1664)" Value="MS" />
          <Enumeration Text="Morocco(+212)" Value="MA" />
          <Enumeration Text="Mozambique(+258)" Value="MZ" />
          <Enumeration Text="Myanmar(+95)" Value="MM" />
          <Enumeration Text="Namibia(+264)" Value="NA" />
          <Enumeration Text="Nauru(+674)" Value="NR" />
          <Enumeration Text="Nepal(+977)" Value="NP" />
          <Enumeration Text="Netherlands(+31)" Value="NL" />
          <Enumeration Text="New Caledonia(+687)" Value="NC" />
          <Enumeration Text="New Zealand(+64)" Value="NZ" />
          <Enumeration Text="Nicaragua(+505)" Value="NI" />
          <Enumeration Text="Niger(+227)" Value="NE" />
          <Enumeration Text="Nigeria(+234)" Value="NG" />
          <Enumeration Text="Niue(+683)" Value="NU" />
          <Enumeration Text="Korea, Democratic People's Republic of (North Korea)(+850)" Value="KP" />
          <Enumeration Text="Northern Mariana Islands(CNMI)(+1670)" Value="MP" />
          <Enumeration Text="Norway(+47)" Value="NO" />
          <Enumeration Text="Oman(+968)" Value="OM" />
          <Enumeration Text="Pakistan(+92)" Value="PK" />
          <Enumeration Text="Palau(+680)" Value="PW" />
          <Enumeration Text="Palestine, State of(+970)" Value="PS" />
          <Enumeration Text="Panama(+507)" Value="PA" />
          <Enumeration Text="Papua New Guinea(+675)" Value="PG" />
          <Enumeration Text="Paraguay(+595)" Value="PY" />
          <Enumeration Text="Peru(+51)" Value="PE" />
          <Enumeration Text="Philippines(+63)" Value="PH" />
          <Enumeration Text="Poland(+48)" Value="PL" />
          <Enumeration Text="Portugal(+351)" Value="PT" />
          <Enumeration Text="Puerto Rico(+1)" Value="PR" />
          <Enumeration Text="Qatar(+974)" Value="QA" />
          <Enumeration Text="Réunion(+262)" Value="RE" />
          <Enumeration Text="Romania(+40)" Value="RO" />
          <Enumeration Text="Russian Federation(+7)" Value="RU" />
          <Enumeration Text="Rwanda(+250)" Value="RW" />
          <Enumeration Text="Saint Helena, Ascension and Tristan da Cunha(+290)" Value="SH" />
          <Enumeration Text="Saint Kitts and Nevis(+1869)" Value="KN" />
          <Enumeration Text="Saint Lucia(+1758)" Value="LC" />
          <Enumeration Text="Saint Pierre and Miquelon(+508)" Value="PM" />
          <Enumeration Text="Saint Vincent and the Grenadines(+1784)" Value="VC" />
          <Enumeration Text="Samoa(+685)" Value="WS" />
          <Enumeration Text="San Marino(+378)" Value="SM" />
          <Enumeration Text="Sao Tome and Principe(+239)" Value="ST" />
          <Enumeration Text="Saudi Arabia(+966)" Value="SA" />
          <Enumeration Text="Senegal(+221)" Value="SN" />
          <Enumeration Text="Serbia(+381)" Value="RS" />
          <Enumeration Text="Seychelles(+248)" Value="SC" />
          <Enumeration Text="Sierra Leone(+232)" Value="SL" />
          <Enumeration Text="Singapore(+65)" Value="SG" />
          <Enumeration Text="Slovakia(+421)" Value="SK" />
          <Enumeration Text="Slovenia(+386)" Value="SI" />
          <Enumeration Text="Solomon Islands(+677)" Value="SB" />
          <Enumeration Text="Somalia(+252)" Value="SO" />
          <Enumeration Text="South Africa(+27)" Value="ZA" />
          <Enumeration Text="Korea, Republic of(+82)" Value="KR" />
          <Enumeration Text="South Sudan(+211)" Value="SS" />
          <Enumeration Text="Spain(+34)" Value="ES" />
          <Enumeration Text="Sri Lanka(+94)" Value="LK" />
          <Enumeration Text="Sudan(+249)" Value="SD" />
          <Enumeration Text="Suriname(+597)" Value="SR" />
          <Enumeration Text="Swaziland(+268)" Value="SZ" />
          <Enumeration Text="Sweden(+46)" Value="SE" />
          <Enumeration Text="Switzerland(+41)" Value="CH" />
          <Enumeration Text="Syrian Arab Republic(+963)" Value="SY" />
          <Enumeration Text="Taiwan, Province of China(+886)" Value="TW" />
          <Enumeration Text="Tajikistan(+992)" Value="TJ" />
          <Enumeration Text="Tanzania, United Republic of(+255)" Value="TZ" />
          <Enumeration Text="Thailand(+66)" Value="TH" />
          <Enumeration Text="Timor-Leste(+670)" Value="TL" />
          <Enumeration Text="Togo(+228)" Value="TG" />
          <Enumeration Text="Tokelau(+690)" Value="TK" />
          <Enumeration Text="Tonga(+676)" Value="TO" />
          <Enumeration Text="Trinidad and Tobago(+1868)" Value="TT" />
          <Enumeration Text="Tunisia(+216)" Value="TN" />
          <Enumeration Text="Turkey(+90)" Value="TR" />
          <Enumeration Text="Turkmenistan(+993)" Value="TM" />
          <Enumeration Text="Turks and Caicos Islands(+1649)" Value="TC" />
          <Enumeration Text="Tuvalu(+688)" Value="TV" />
          <Enumeration Text="Uganda(+256)" Value="UG" />
          <Enumeration Text="Ukraine(+380)" Value="UA" />
          <Enumeration Text="United Arab Emirates(+971)" Value="AE" />
          <Enumeration Text="United Kingdom(+44)" Value="GB" />
          <Enumeration Text="United States(+1)" Value="US" />
          <Enumeration Text="Virgin Islands, U.S.(+1340)" Value="VI" />
          <Enumeration Text="Uruguay(+598)" Value="UY" />
          <Enumeration Text="Uzbekistan(+998)" Value="UZ" />
          <Enumeration Text="Vanuatu(+678)" Value="VU" />
          <Enumeration Text="Holy See (Vatican City State)(+379)" Value="VA" />
          <Enumeration Text="Venezuela, Bolivarian Republic of(+58)" Value="VE" />
          <Enumeration Text="Vietnam(+84)" Value="VN" />
          <Enumeration Text="Wallis and Futuna(+681)" Value="WF" />
          <Enumeration Text="Yemen(+967)" Value="YE" />
          <Enumeration Text="Zambia(+260)" Value="ZM" />
          <Enumeration Text="Zimbabwe(+263)" Value="ZW" />
        </Restriction>
      </ClaimType>
      <ClaimType Id="phoneVerificationCode">
        <DisplayName>Phone Verification Code</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Enter your SMS verification code</UserHelpText>
        <UserInputType>TextBox</UserInputType>
        <!--Restriction>
          <Pattern RegularExpression="^[0-9]{1,15}$" HelpText="Please enter digits" />
        </Restriction-->
      </ClaimType>
      <ClaimType Id="cpiminternal_legalCountry">
        <DisplayName>Country of Residence</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>The country in which the user legally resides.</AdminHelpText>
        <UserHelpText>The country in which you legally reside.</UserHelpText>
        <UserInputType>DropdownSingleSelect</UserInputType>
        <Restriction>
          <!-- The following is the approved ISO short-form Microsoft country list, taken from https://microsoft.sharepoint.com/teams/celaGlobalReadiness/Lists/CountryRegion/CountryRegionList.aspx -->
          <Enumeration Text="Afghanistan" Value="AF" />
          <Enumeration Text="Åland Islands" Value="AX" />
          <Enumeration Text="Albania" Value="AL" />
          <Enumeration Text="Algeria" Value="DZ" />
          <Enumeration Text="American Samoa" Value="AS" />
          <Enumeration Text="Andorra" Value="AD" />
          <Enumeration Text="Angola" Value="AO" />
          <Enumeration Text="Anguilla" Value="AI" />
          <Enumeration Text="Antarctica" Value="AQ" />
          <Enumeration Text="Antigua and Barbuda" Value="AG" />
          <Enumeration Text="Argentina" Value="AR" />
          <Enumeration Text="Armenia" Value="AM" />
          <Enumeration Text="Aruba" Value="AW" />
          <Enumeration Text="Australia" Value="AU" />
          <Enumeration Text="Austria" Value="AT" />
          <Enumeration Text="Azerbaijan" Value="AZ" />
          <Enumeration Text="Bahamas" Value="BS" />
          <Enumeration Text="Bahrain" Value="BH" />
          <Enumeration Text="Bangladesh" Value="BD" />
          <Enumeration Text="Barbados" Value="BB" />
          <Enumeration Text="Belarus" Value="BY" />
          <Enumeration Text="Belgium" Value="BE" />
          <Enumeration Text="Belize" Value="BZ" />
          <Enumeration Text="Benin" Value="BJ" />
          <Enumeration Text="Bermuda" Value="BM" />
          <Enumeration Text="Bhutan" Value="BT" />
          <Enumeration Text="Bolivia" Value="BO" />
          <Enumeration Text="Bonaire" Value="BQ" />
          <Enumeration Text="Bosnia and Herzegovina" Value="BA" />
          <Enumeration Text="Botswana" Value="BW" />
          <Enumeration Text="Bouvet Island" Value="BV" />
          <Enumeration Text="Brazil" Value="BR" />
          <Enumeration Text="British Indian Ocean Territory" Value="IO" />
          <Enumeration Text="British Virgin Islands" Value="VG" />
          <Enumeration Text="Brunei" Value="BN" />
          <Enumeration Text="Bulgaria" Value="BG" />
          <Enumeration Text="Burkina Faso" Value="BF" />
          <Enumeration Text="Burundi" Value="BI" />
          <Enumeration Text="Cabo Verde" Value="CV" />
          <Enumeration Text="Cambodia" Value="KH" />
          <Enumeration Text="Cameroon" Value="CM" />
          <Enumeration Text="Canada" Value="CA" />
          <Enumeration Text="Cayman Islands" Value="KY" />
          <Enumeration Text="Central African Republic" Value="CF" />
          <Enumeration Text="Chad" Value="TD" />
          <Enumeration Text="Chile" Value="CL" />
          <Enumeration Text="China" Value="CN" />
          <Enumeration Text="Christmas Island" Value="CX" />
          <Enumeration Text="Cocos (Keeling) Islands" Value="CC" />
          <Enumeration Text="Colombia" Value="CO" />
          <Enumeration Text="Comoros" Value="KM" />
          <Enumeration Text="Congo" Value="CG" />
          <Enumeration Text="Congo (DRC)" Value="CD" />
          <Enumeration Text="Cook Islands" Value="CK" />
          <Enumeration Text="Costa Rica" Value="CR" />
          <Enumeration Text="Côte d’Ivoire" Value="CI" />
          <Enumeration Text="Croatia" Value="HR" />
          <Enumeration Text="Cuba" Value="CU" />
          <Enumeration Text="Curaçao" Value="CW" />
          <Enumeration Text="Cyprus" Value="CY" />
          <Enumeration Text="Czech Republic" Value="CZ" />
          <Enumeration Text="Denmark" Value="DK" />
          <Enumeration Text="Djibouti" Value="DJ" />
          <Enumeration Text="Dominica" Value="DM" />
          <Enumeration Text="Dominican Republic" Value="DO" />
          <Enumeration Text="Ecuador" Value="EC" />
          <Enumeration Text="Egypt" Value="EG" />
          <Enumeration Text="El Salvador" Value="SV" />
          <Enumeration Text="Equatorial Guinea" Value="GQ" />
          <Enumeration Text="Eritrea" Value="ER" />
          <Enumeration Text="Estonia" Value="EE" />
          <Enumeration Text="Ethiopia" Value="ET" />
          <Enumeration Text="Falkland Islands" Value="FK" />
          <Enumeration Text="Faroe Islands" Value="FO" />
          <Enumeration Text="Fiji" Value="FJ" />
          <Enumeration Text="Finland" Value="FI" />
          <Enumeration Text="France" Value="FR" />
          <Enumeration Text="French Guiana" Value="GF" />
          <Enumeration Text="French Polynesia" Value="PF" />
          <Enumeration Text="French Southern Territories" Value="TF" />
          <Enumeration Text="Gabon" Value="GA" />
          <Enumeration Text="Gambia" Value="GM" />
          <Enumeration Text="Georgia" Value="GE" />
          <Enumeration Text="Germany" Value="DE" />
          <Enumeration Text="Ghana" Value="GH" />
          <Enumeration Text="Gibraltar" Value="GI" />
          <Enumeration Text="Greece" Value="GR" />
          <Enumeration Text="Greenland" Value="GL" />
          <Enumeration Text="Grenada" Value="GD" />
          <Enumeration Text="Guadeloupe" Value="GP" />
          <Enumeration Text="Guam" Value="GU" />
          <Enumeration Text="Guatemala" Value="GT" />
          <Enumeration Text="Guernsey" Value="GG" />
          <Enumeration Text="Guinea" Value="GN" />
          <Enumeration Text="Guinea-Bissau" Value="GW" />
          <Enumeration Text="Guyana" Value="GY" />
          <Enumeration Text="Haiti" Value="HT" />
          <Enumeration Text="Heard Island and McDonald Islands" Value="HM" />
          <Enumeration Text="Honduras" Value="HN" />
          <Enumeration Text="Hong Kong SAR" Value="HK" />
          <Enumeration Text="Hungary" Value="HU" />
          <Enumeration Text="Iceland" Value="IS" />
          <Enumeration Text="India" Value="IN" />
          <Enumeration Text="Indonesia" Value="ID" />
          <Enumeration Text="Iran" Value="IR" />
          <Enumeration Text="Iraq" Value="IQ" />
          <Enumeration Text="Ireland" Value="IE" />
          <Enumeration Text="Isle of Man" Value="IM" />
          <Enumeration Text="Israel" Value="IL" />
          <Enumeration Text="Italy" Value="IT" />
          <Enumeration Text="Jamaica" Value="JM" />
          <Enumeration Text="Jan Mayen" Value="XJ" />
          <Enumeration Text="Japan" Value="JP" />
          <Enumeration Text="Jersey" Value="JE" />
          <Enumeration Text="Jordan" Value="JO" />
          <Enumeration Text="Kazakhstan" Value="KZ" />
          <Enumeration Text="Kenya" Value="KE" />
          <Enumeration Text="Kiribati" Value="KI" />
          <Enumeration Text="Korea" Value="KR" />
          <Enumeration Text="Kosovo" Value="XK" />
          <Enumeration Text="Kuwait" Value="KW" />
          <Enumeration Text="Kyrgyzstan" Value="KG" />
          <Enumeration Text="Laos" Value="LA" />
          <Enumeration Text="Latvia" Value="LV" />
          <Enumeration Text="Lebanon" Value="LB" />
          <Enumeration Text="Lesotho" Value="LS" />
          <Enumeration Text="Liberia" Value="LR" />
          <Enumeration Text="Libya" Value="LY" />
          <Enumeration Text="Liechtenstein" Value="LI" />
          <Enumeration Text="Lithuania" Value="LT" />
          <Enumeration Text="Luxembourg" Value="LU" />
          <Enumeration Text="Macao SAR" Value="MO" />
          <Enumeration Text="Macedonia, FYRO" Value="MK" />
          <Enumeration Text="Madagascar" Value="MG" />
          <Enumeration Text="Malawi" Value="MW" />
          <Enumeration Text="Malaysia" Value="MY" />
          <Enumeration Text="Maldives" Value="MV" />
          <Enumeration Text="Mali" Value="ML" />
          <Enumeration Text="Malta" Value="MT" />
          <Enumeration Text="Marshall Islands" Value="MH" />
          <Enumeration Text="Martinique" Value="MQ" />
          <Enumeration Text="Mauritania" Value="MR" />
          <Enumeration Text="Mauritius" Value="MU" />
          <Enumeration Text="Mayotte" Value="YT" />
          <Enumeration Text="Mexico" Value="MX" />
          <Enumeration Text="Micronesia" Value="FM" />
          <Enumeration Text="Moldova" Value="MD" />
          <Enumeration Text="Monaco" Value="MC" />
          <Enumeration Text="Mongolia" Value="MN" />
          <Enumeration Text="Montenegro" Value="ME" />
          <Enumeration Text="Montserrat" Value="MS" />
          <Enumeration Text="Morocco" Value="MA" />
          <Enumeration Text="Mozambique" Value="MZ" />
          <Enumeration Text="Myanmar" Value="MM" />
          <Enumeration Text="Namibia" Value="NA" />
          <Enumeration Text="Nauru" Value="NR" />
          <Enumeration Text="Nepal" Value="NP" />
          <Enumeration Text="Netherlands" Value="NL" />
          <Enumeration Text="New Caledonia" Value="NC" />
          <Enumeration Text="New Zealand" Value="NZ" />
          <Enumeration Text="Nicaragua" Value="NI" />
          <Enumeration Text="Niger" Value="NE" />
          <Enumeration Text="Nigeria" Value="NG" />
          <Enumeration Text="Niue" Value="NU" />
          <Enumeration Text="Norfolk Island" Value="NF" />
          <Enumeration Text="North Korea" Value="KP" />
          <Enumeration Text="Northern Mariana Islands" Value="MP" />
          <Enumeration Text="Norway" Value="NO" />
          <Enumeration Text="Oman" Value="OM" />
          <Enumeration Text="Pakistan" Value="PK" />
          <Enumeration Text="Palau" Value="PW" />
          <Enumeration Text="Palestinian Authority" Value="PS" />
          <Enumeration Text="Panama" Value="PA" />
          <Enumeration Text="Papua New Guinea" Value="PG" />
          <Enumeration Text="Paraguay" Value="PY" />
          <Enumeration Text="Peru" Value="PE" />
          <Enumeration Text="Philippines" Value="PH" />
          <Enumeration Text="Pitcairn Islands" Value="PN" />
          <Enumeration Text="Poland" Value="PL" />
          <Enumeration Text="Portugal" Value="PT" />
          <Enumeration Text="Puerto Rico" Value="PR" />
          <Enumeration Text="Qatar" Value="QA" />
          <Enumeration Text="Réunion" Value="RE" />
          <Enumeration Text="Romania" Value="RO" />
          <Enumeration Text="Russia" Value="RU" />
          <Enumeration Text="Rwanda" Value="RW" />
          <Enumeration Text="Saba" Value="XS" />
          <Enumeration Text="Saint Barthélemy" Value="BL" />
          <Enumeration Text="Saint Kitts and Nevis" Value="KN" />
          <Enumeration Text="Saint Lucia" Value="LC" />
          <Enumeration Text="Saint Martin" Value="MF" />
          <Enumeration Text="Saint Pierre and Miquelon" Value="PM" />
          <Enumeration Text="Saint Vincent and the Grenadines" Value="VC" />
          <Enumeration Text="Samoa" Value="WS" />
          <Enumeration Text="San Marino" Value="SM" />
          <Enumeration Text="São Tomé and Príncipe" Value="ST" />
          <Enumeration Text="Saudi Arabia" Value="SA" />
          <Enumeration Text="Senegal" Value="SN" />
          <Enumeration Text="Serbia" Value="RS" />
          <Enumeration Text="Seychelles" Value="SC" />
          <Enumeration Text="Sierra Leone" Value="SL" />
          <Enumeration Text="Singapore" Value="SG" />
          <Enumeration Text="Sint Eustatius" Value="XE" />
          <Enumeration Text="Sint Maarten" Value="SX" />
          <Enumeration Text="Slovakia" Value="SK" />
          <Enumeration Text="Slovenia" Value="SI" />
          <Enumeration Text="Solomon Islands" Value="SB" />
          <Enumeration Text="Somalia" Value="SO" />
          <Enumeration Text="South Africa" Value="ZA" />
          <Enumeration Text="South Georgia and the South Sandwich Islands" Value="GS" />
          <Enumeration Text="South Sudan" Value="SS" />
          <Enumeration Text="Spain" Value="ES" />
          <Enumeration Text="Sri Lanka" Value="LK" />
          <Enumeration Text="St Helena, Ascension, Tristan da Cunha" Value="SH" />
          <Enumeration Text="Sudan" Value="SD" />
          <Enumeration Text="Suriname" Value="SR" />
          <Enumeration Text="Svalbard" Value="SJ" />
          <Enumeration Text="Swaziland" Value="SZ" />
          <Enumeration Text="Sweden" Value="SE" />
          <Enumeration Text="Switzerland" Value="CH" />
          <Enumeration Text="Syria" Value="SY" />
          <Enumeration Text="Taiwan" Value="TW" />
          <Enumeration Text="Tajikistan" Value="TJ" />
          <Enumeration Text="Tanzania" Value="TZ" />
          <Enumeration Text="Thailand" Value="TH" />
          <Enumeration Text="Timor-Leste" Value="TL" />
          <Enumeration Text="Togo" Value="TG" />
          <Enumeration Text="Tokelau" Value="TK" />
          <Enumeration Text="Tonga" Value="TO" />
          <Enumeration Text="Trinidad and Tobago" Value="TT" />
          <Enumeration Text="Tunisia" Value="TN" />
          <Enumeration Text="Turkey" Value="TR" />
          <Enumeration Text="Turkmenistan" Value="TM" />
          <Enumeration Text="Turks and Caicos Islands" Value="TC" />
          <Enumeration Text="Tuvalu" Value="TV" />
          <Enumeration Text="U.S. Outlying Islands" Value="UM" />
          <Enumeration Text="U.S. Virgin Islands" Value="VI" />
          <Enumeration Text="Uganda" Value="UG" />
          <Enumeration Text="Ukraine" Value="UA" />
          <Enumeration Text="United Arab Emirates" Value="AE" />
          <Enumeration Text="United Kingdom" Value="GB" />
          <Enumeration Text="United States" Value="US" />
          <Enumeration Text="Uruguay" Value="UY" />
          <Enumeration Text="Uzbekistan" Value="UZ" />
          <Enumeration Text="Vanuatu" Value="VU" />
          <Enumeration Text="Vatican City" Value="VA" />
          <Enumeration Text="Venezuela" Value="VE" />
          <Enumeration Text="Vietnam" Value="VN" />
          <Enumeration Text="Wallis and Futuna" Value="WF" />
          <Enumeration Text="Yemen" Value="YE" />
          <Enumeration Text="Zambia" Value="ZM" />
          <Enumeration Text="Zimbabwe" Value="ZW" />
        </Restriction>
      </ClaimType>
      <ClaimType Id="blockMinorUser">
        <DisplayName>blockMinorUser</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>True, if the user is considered a minor by the laws and regulations of the user's country of legal residence and should be blocked</AdminHelpText>
        <UserHelpText>True, if the user is considered a minor by the laws and regulations of the user's country of legal residence and should be blocked</UserHelpText>
      </ClaimType>
      <ClaimType Id="isMinor">
        <DisplayName>isMinor</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>True, if the user is considered a minor by the laws and regulations of the user's country of legal residence</AdminHelpText>
        <UserHelpText>True, if the user is considered a minor by the laws and regulations of the user's country of legal residence</UserHelpText>
      </ClaimType>
      <ClaimType Id="doRegulationsRequireParentalConsent">
        <DisplayName>Requires Parental Consent</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>True, if regulations require parental consent for minors</AdminHelpText>
        <UserHelpText>True, if regulations require parental consent for minors</UserHelpText>
      </ClaimType>
      <ClaimType Id="regulation">
        <DisplayName>Regulation</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>The regulation used by the user's country of legal residence</AdminHelpText>
        <UserHelpText>The regulation used by the user's country of legal residence</UserHelpText>
      </ClaimType>
      <ClaimType Id="response">
        <DisplayName>response</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>A claim responsible for holding response to send to the relying party</AdminHelpText>
        <UserHelpText>A claim responsible for holding response to send to the relying party</UserHelpText>
      </ClaimType>
      <ClaimType Id="responseMsg">
        <DisplayName></DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>A claim responsible for holding response messages to send to the relying party</AdminHelpText>
        <UserHelpText>A claim responsible for holding response messages to send to the relying party</UserHelpText>
        <UserInputType>Paragraph</UserInputType>
        <Restriction>
          <Enumeration Text="B2C_V1_90001" Value="Unfortunately, your sign on has been blocked. Privacy and online safety laws in your country prevent access to accounts belonging to children." />
        </Restriction>
      </ClaimType>
      <ClaimType Id="responsecode">
        <DisplayName>responsecode</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>A claim responsible for holding response codes to send to the relying party</AdminHelpText>
        <UserHelpText>A claim responsible for holding response codes to send to the relying party</UserHelpText>
      </ClaimType>
      <ClaimType Id="restApiAction">
        <DisplayName>restApiAction</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>A claim responsible for holding response action returned by the Rest API</AdminHelpText>
        <UserHelpText>A claim responsible for holding response action returned by the Rest API</UserHelpText>
      </ClaimType>
      <ClaimType Id="restApiUserMessage">
        <DisplayName></DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>A claim responsible for holding response messages to send to the relying party returned by the Rest API</AdminHelpText>
        <UserHelpText>A claim responsible for holding response messages to send to the relying party returned by the Rest API</UserHelpText>
      </ClaimType>
      <ClaimType Id="restApiCode">
        <DisplayName>responsecode</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>A claim responsible for holding response codes to send to the relying party returned by the Rest API</AdminHelpText>
        <UserHelpText>A claim responsible for holding response codes to send to the relying party returned by the Rest API</UserHelpText>
      </ClaimType>
      <ClaimType Id="restApiStep">
        <DisplayName>restApiStep</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>The API connector step type to be sent in the body of an API connector request</AdminHelpText>
      </ClaimType>
      <ClaimType Id="restApiClientId">
        <DisplayName>restApiClientId</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>The value of the client ID to be sent in the body of an API connector request</AdminHelpText>
      </ClaimType>
      <ClaimType Id="islegalAgeGroupClassificationUndefined">
        <DisplayName>islegalAgeGroupClassificationUndefined</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>True if legalAgeGroupClassification value is set as Undefined</AdminHelpText>
        <UserHelpText>islegalAgeGroupClassificationUndefined</UserHelpText>
      </ClaimType>
      <ClaimType Id="isLegalAgeGroupClassificationMinorWithoutConsent">
        <DisplayName>isLegalAgeGroupClassificationMinorWithoutConsent</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>True if legalAgeGroupClassification value is set as MinorWithoutParentalConsent</AdminHelpText>
        <UserHelpText>isLegalAgeGroupClassificationMinorWithoutConsent</UserHelpText>
      </ClaimType>
      <ClaimType Id="isMinorAndRequiresParentalConsent">
        <DisplayName>isMinorAndRequiresParentalConsent</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>True, if the user is considered a minor by the laws and regulations of the user's country of legal residence and should be blocked</AdminHelpText>
        <UserHelpText>True, if the user is considered a minor by the laws and regulations of the user's country of legal residence and should be blocked</UserHelpText>
      </ClaimType>
      <ClaimType Id="shouldBlockMinor">
        <DisplayName>shouldBlockMinor</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>True if response option selected by Relying Party Admin is to block Minor</AdminHelpText>
        <UserHelpText>True if response option selected by Relying Party Admin is to block Minor</UserHelpText>
      </ClaimType>
      <ClaimType Id="isCombinationLogonidentifier">
        <DisplayName>isCombinationLogonidentifier</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="strongAuthEmailExists">
        <DisplayName>strongAuthEmailExists</DisplayName>
        <DataType>boolean</DataType>
      </ClaimType>
      <ClaimType Id="isDoBPresent">
        <DisplayName>isDoBPresent</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>True if cpiminternal_dateOfBirth is present in claimsBag</AdminHelpText>
        <UserHelpText>isLegalAgeGroupClassificationMinorWithoutConsent</UserHelpText>
      </ClaimType>
      <ClaimType Id="isLegalCountryPresent">
        <DisplayName>isLegalCountryPresent</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>True if cpiminternal_legalCountry is present in claimsBag</AdminHelpText>
        <UserHelpText>True if legalCountry value is present in claimsBag</UserHelpText>
      </ClaimType>
      <ClaimType Id="skipProgressiveProfilePage">
        <DisplayName>skipProgressiveProfilePage</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>True if cpiminternal_dateOfBirth and cpiminternal_legalCountry are present in claimsBag so skip showing ProgressiveProfile page.</AdminHelpText>
        <UserHelpText>True if cpiminternal_dateOfBirth and cpiminternal_legalCountry are present in claimsBag so skip showing ProgressiveProfile page.</UserHelpText>
      </ClaimType>
      <ClaimType Id="ageGroupValueChanged">
        <DisplayName>ageGroupValueChanged</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>True if re-evaluating ageGroup gives different value then existing ageGroup value.</AdminHelpText>
        <UserHelpText>True if re-evaluating ageGroup gives different value then existing ageGroup value.</UserHelpText>
      </ClaimType>
      <ClaimType Id="consentProvidedForMinorValueChanged">
        <DisplayName>consentProvidedForMinorValueChanged</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>True if re-evaluating consentProvidedForMinor gives different value then existing consentProvidedForMinor value.</AdminHelpText>
        <UserHelpText>True if re-evaluating consentProvidedForMinor gives different value then existing consentProvidedForMinor value.</UserHelpText>
      </ClaimType>
      <ClaimType Id="ageGatingValuesChanged">
        <DisplayName>ageGatingValuesChanged</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>True if re-evaluating ageGroup/consentProvidedForMinor gives different value then existing ageGroup/consentProvidedForMinor value.</AdminHelpText>
        <UserHelpText>True if re-evaluating ageGroup/consentProvidedForMinor gives different value then existing ageGroup/consentProvidedForMinor value.</UserHelpText>
      </ClaimType>
      <ClaimType Id="ignoreConsent">
        <DisplayName>ignoreConsent</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>True if parental consent provided for a minor should be ignored.</AdminHelpText>
        <UserHelpText>True if parental consent provided for a minor should be ignored.</UserHelpText>
      </ClaimType>
      <ClaimType Id="isMinorAndIgnoreConsent">
        <DisplayName>isMinorAndIgnoreConsent</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>True if a user is minor and consentProvidedForMinor is ignored.</AdminHelpText>
        <UserHelpText>True if a user is minor and consentProvidedForMinor is ignored.</UserHelpText>
      </ClaimType>
      <ClaimType Id="isMinorNeedToBeBlocked">
        <DisplayName>isMinorNeedToBeBlocked</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>True if a user is supposed to be blocked.</AdminHelpText>
        <UserHelpText>True if a user is supposed to be blocked.</UserHelpText>
      </ClaimType>
      <ClaimType Id="ui_locales">
        <DisplayName>ui_locales</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>A policy claim for use as an input claim of an OIDC technical profile to send the ui_locales parameter to the external OIDC provider</AdminHelpText>
        <UserHelpText>A policy claim for use as an input claim of an OIDC technical profile to send the ui_locales parameter to the external OIDC provider</UserHelpText>
      </ClaimType>
      <ClaimType Id="nullStringClaim">
        <DisplayName>nullClaim</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>A policy claim to store unuseful output values from ClaimsTransformations. This claim should not be used in a TechnicalProfiles.</AdminHelpText>
        <UserHelpText>A policy claim to store unuseful output values from ClaimsTransformations. This claim should not be used in a TechnicalProfiles.</UserHelpText>
      </ClaimType>
      <ClaimType Id="emailVerificationCode">
        <DisplayName>Verification Code</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Enter your verification code</UserHelpText>
        <UserInputType>TextBox</UserInputType>
      </ClaimType>
      <!-- Authenticator ClaimTypes -->
      <ClaimType Id="secretKey">
        <DisplayName>If you can't scan the image, enter the secret key:</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>QR code secret</UserHelpText>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>
      <ClaimType Id="otpCode">
        <DisplayName>Enter your code</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>Enter the 6-digit verification code generated by the Authenticator app in the box</UserHelpText>
        <UserInputType>TextBox</UserInputType>
        <Restriction>
          <Pattern RegularExpression="^[0-9]{6}$" HelpText="Enter the 6-digit verification code generated by the Authenticator app in the box" />
        </Restriction>
      </ClaimType>
      <ClaimType Id="issuer">
        <DisplayName>Issuer</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="uriLabel">
        <DisplayName>Uri Label</DisplayName>
        <DataType>string</DataType>
      </ClaimType>
      <ClaimType Id="qrCodeContent">
        <DisplayName>QR Code Text</DisplayName>
        <DataType>string</DataType>
        <UserHelpText>QR code text</UserHelpText>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>
      <ClaimType Id="numberOfAvailableDevices">
        <DisplayName>Number of available devices:</DisplayName>
        <DataType>string</DataType>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>
      <ClaimType Id="QrCodeScanInstruction">
        <DisplayName>Once you've downloaded the Authenticator app, you can use any of the methods below to continue with enrollment.</DisplayName>
        <DataType>string</DataType>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>
      <ClaimType Id="QrCodeVerifyInstruction">
        <DisplayName>Enter the verification code from your authenticator app​.</DisplayName>
        <DataType>string</DataType>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>
      <ClaimType Id="totpIdentifier">
        <DisplayName>UserId, Phone number or Email which can present the user's identity</DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>UserId, Phone number or Email which can be used to create QR code identity.</AdminHelpText>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>
    </ClaimsSchema>
    <Predicates>
      <Predicate Id="IsLengthBetween8And64" Method="IsLengthRange">
        <UserHelpText>The password must be between 8 and 64 characters.</UserHelpText>
        <Parameters>
          <Parameter Id="Minimum">8</Parameter>
          <Parameter Id="Maximum">64</Parameter>
        </Parameters>
      </Predicate>
      <Predicate Id="Lowercase" Method="IncludesCharacters">
        <UserHelpText>a lowercase letter</UserHelpText>
        <Parameters>
          <Parameter Id="CharacterSet">a-z</Parameter>
        </Parameters>
      </Predicate>
      <Predicate Id="Uppercase" Method="IncludesCharacters">
        <UserHelpText>an uppercase letter</UserHelpText>
        <Parameters>
          <Parameter Id="CharacterSet">A-Z</Parameter>
        </Parameters>
      </Predicate>
      <Predicate Id="Number" Method="IncludesCharacters">
        <UserHelpText>a digit</UserHelpText>
        <Parameters>
          <Parameter Id="CharacterSet">0-9</Parameter>
        </Parameters>
      </Predicate>
      <Predicate Id="Symbol" Method="IncludesCharacters">
        <UserHelpText>a symbol</UserHelpText>
        <Parameters>
          <Parameter Id="CharacterSet">@#$%^&amp;*\-_+=[]{}|\\:',.?/`~"();!</Parameter>
        </Parameters>
      </Predicate>
      <Predicate Id="PIN" Method="MatchesRegex">
        <UserHelpText>The password must be numbers only.</UserHelpText>
        <Parameters>
          <Parameter Id="RegularExpression">^[0-9]+$</Parameter>
        </Parameters>
      </Predicate>
      <Predicate Id="AllowedAADCharacters" Method="MatchesRegex">
        <UserHelpText>An invalid character was provided.</UserHelpText>
        <!--
            We will allow following cases to pass the regular expression(Please test it in browser console if necessary):
            From left to right separated by "|":
            1. One or more characters listed in the first set including the white space.
            2. Dots as long as it is not followed by character "@". 
            3. Empty string. 
            Note: "(^$)" will prevent the error message from showing up when input box is empty, and the length predicate
            will serve the coverage during the time.
          -->
        <Parameters>
          <Parameter Id="RegularExpression">(^([0-9A-Za-z\d@#$%^&amp;*\-_+=[\]{}|\\:',?/`~"();! ]|(\.(?!@)))+$)|(^$)</Parameter>
        </Parameters>
      </Predicate>
      <Predicate Id="DisallowedWhitespace" Method="MatchesRegex">
        <UserHelpText>The password must not begin or end with a whitespace character.</UserHelpText>
        <Parameters>
          <!--
            We will allow following cases to pass the regular expression(Please test it in browser console if necessary):
            From left to right separated by "|":
            1. Zero or more characters with start or end characters as non white space characters.
            2. Non white space Characters.
            3. Empty string.
            Note: "(^$)" will prevent the error message from showing up when input box is empty, and the length predicate
            will serve the coverage during the time.
          -->
          <Parameter Id="RegularExpression">(^\S.*\S$)|(^\S+$)|(^$)</Parameter>
        </Parameters>
      </Predicate>
      <Predicate Id="DateRangeBetween1905AndToday" Method="IsDateRange" HelpText="The date must be between 01-01-1905 and today.">
        <Parameters>
          <Parameter Id="Minimum">1905-01-01</Parameter>
          <Parameter Id="Maximum">Today</Parameter>
        </Parameters>
      </Predicate>
      <Predicate Id="internationalOrNationalPhoneNumber" Method="MatchesRegex">
        <UserHelpText>The value entered needs to be a phone number.</UserHelpText>
        <Parameters>
          <!--
              This regex will match a string with an optional leading "+", 4 to 16 digits, and any number of dashes, parentheses, and spaces, in any order.
              It is intentionally overinclusive to allow the user to continue their journey with any input that might be an international or national phone number 
              in any country with any customary punctuation/formatting. In this policy, the ConvertStringToPhoneNumberClaim claims converter will do the the final validation, 
              ignoring the dashes, parentheses, and spaces.
            -->
          <Parameter Id="RegularExpression">^\+?(?:[-()\s]*\d[-()\s]*){4,16}$</Parameter>
        </Parameters>
      </Predicate>
      <Predicate Id="noLeadingPlus" Method="MatchesRegex">
        <Parameters>
          <!-- Combine this with the predicate above to match only a national phone number -->
          <Parameter Id="RegularExpression">^[^\\+]+$</Parameter>
        </Parameters>
      </Predicate>
      <Predicate Id="emailCombination" Method="MatchesRegex">
        <UserHelpText>Please enter a valid email address.</UserHelpText>
        <Parameters>
          <!--
            This regex is constructed mostly from RFC 5322 for email, with intentional omissions based on discovery of characters that don't work for other services we use
            # the below two lines cover the local part of the email, before the '@' sign
            [a-zA-Z0-9!#$%&amp;'+^_`{}~-]+         # matches lower or upper case letters, digits, and certain special characters
            (?:\.[a-zA-Z0-9!#$%&amp;'+^_`{}~-]+)*  # same list as above, but including an optional '.' character at the beginning, repeated
            # together, the above two lines prevent the '.' character from appearing at the start, end, or twice in a row in the local part
            @                                      # the '@' symbol appears exactly once, seperating the local and domain sections
            (?:[a-zA-Z0-9]                         # matches lower and uppercase letters and digits
            (?:[a-zA-Z0-9-]*                       # same as above, but also allowing '-'
            [a-zA-Z0-9])                           # only lower and uppercase letters and digits again
            ?\.)+                                  # allows for a '.' character to terminate a section
            # the above lines mean that '.' can create segments, and segments can't begin or end with a '-'. Also, no repeating '.' chars
            [a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$
            # the above line is the essentially same as the previous section, but forces the email to not end with a '.'
          -->
          <Parameter Id="RegularExpression">^[a-zA-Z0-9!#$%&amp;'+^_`{}~-]+(?:\.[a-zA-Z0-9!#$%&amp;'+^_`{}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$</Parameter>
        </Parameters>
      </Predicate>
    </Predicates>
    <PredicateValidations>
      <PredicateValidation Id="SimplePassword">
        <PredicateGroups>
          <PredicateGroup Id="DisallowedWhitespaceGroup">
            <PredicateReferences>
              <PredicateReference Id="DisallowedWhitespace" />
            </PredicateReferences>
          </PredicateGroup>
          <PredicateGroup Id="AllowedAADCharactersGroup">
            <PredicateReferences>
              <PredicateReference Id="AllowedAADCharacters" />
            </PredicateReferences>
          </PredicateGroup>
          <PredicateGroup Id="LengthGroup">
            <PredicateReferences>
              <PredicateReference Id="IsLengthBetween8And64" />
            </PredicateReferences>
          </PredicateGroup>
        </PredicateGroups>
      </PredicateValidation>
      <PredicateValidation Id="emailCombination">
        <PredicateGroups>
          <PredicateGroup Id="emailCombination">
            <PredicateReferences>
              <PredicateReference Id="emailCombination" />
            </PredicateReferences>
          </PredicateGroup>
        </PredicateGroups>
      </PredicateValidation>
      <PredicateValidation Id="phoneOrEmailSignInName">
        <PredicateGroups>
          <PredicateGroup Id="phoneOrEmailSignInName">
            <UserHelpText>Please enter a valid email address or phone number.</UserHelpText>
            <PredicateReferences MatchAtLeast="1">
              <PredicateReference Id="emailCombination" />
              <PredicateReference Id="internationalOrNationalPhoneNumber" />
            </PredicateReferences>
          </PredicateGroup>
        </PredicateGroups>
      </PredicateValidation>
      <PredicateValidation Id="nationalNumber">
        <PredicateGroups>
          <PredicateGroup Id="internationalOrNationalPhoneNumber">
            <PredicateReferences>
              <PredicateReference Id="internationalOrNationalPhoneNumber" />
            </PredicateReferences>
          </PredicateGroup>
          <PredicateGroup Id="noLeadingPlus">
            <PredicateReferences>
              <PredicateReference Id="noLeadingPlus" />
            </PredicateReferences>
          </PredicateGroup>
        </PredicateGroups>
      </PredicateValidation>
      <PredicateValidation Id="internationalOrNationalPhoneNumber">
        <PredicateGroups>
          <PredicateGroup Id="internationalOrNationalPhoneNumber">
            <PredicateReferences>
              <PredicateReference Id="internationalOrNationalPhoneNumber" />
            </PredicateReferences>
          </PredicateGroup>
        </PredicateGroups>
      </PredicateValidation>
      <PredicateValidation Id="StrongPassword">
        <PredicateGroups>
          <PredicateGroup Id="DisallowedWhitespaceGroup">
            <PredicateReferences>
              <PredicateReference Id="DisallowedWhitespace" />
            </PredicateReferences>
          </PredicateGroup>
          <PredicateGroup Id="AllowedAADCharactersGroup">
            <PredicateReferences>
              <PredicateReference Id="AllowedAADCharacters" />
            </PredicateReferences>
          </PredicateGroup>
          <PredicateGroup Id="LengthGroup">
            <PredicateReferences>
              <PredicateReference Id="IsLengthBetween8And64" />
            </PredicateReferences>
          </PredicateGroup>
          <PredicateGroup Id="CharacterClasses">
            <UserHelpText>The password must have at least 3 of the following:</UserHelpText>
            <PredicateReferences MatchAtLeast="3">
              <PredicateReference Id="Lowercase" />
              <PredicateReference Id="Uppercase" />
              <PredicateReference Id="Number" />
              <PredicateReference Id="Symbol" />
            </PredicateReferences>
          </PredicateGroup>
        </PredicateGroups>
      </PredicateValidation>
      <PredicateValidation Id="CustomPassword">
        <PredicateGroups>
          <PredicateGroup Id="DisallowedWhitespaceGroup">
            <PredicateReferences>
              <PredicateReference Id="DisallowedWhitespace" />
            </PredicateReferences>
          </PredicateGroup>
          <PredicateGroup Id="AllowedAADCharactersGroup">
            <PredicateReferences>
              <PredicateReference Id="AllowedAADCharacters" />
            </PredicateReferences>
          </PredicateGroup>
        </PredicateGroups>
      </PredicateValidation>
      <PredicateValidation Id="DefaultDateRange">
        <PredicateGroups>
          <PredicateGroup Id="DateRangeGroup">
            <PredicateReferences>
              <PredicateReference Id="DateRangeBetween1905AndToday" />
            </PredicateReferences>
          </PredicateGroup>
        </PredicateGroups>
      </PredicateValidation>
    </PredicateValidations>
    <ClaimsTransformations>
      <ClaimsTransformation Id="SetResponseMessageForForcedPasswordReset" TransformationMethod="GetLocalizedStringsTransformation">
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="responseMsg" TransformationClaimType="expiredPasswordMessage" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetResponseMessageForForcedPasswordResetCA" TransformationMethod="GetLocalizedStringsTransformation">
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="responseMsg" TransformationClaimType="forcedPasswordResetMessage" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="AddToAuthenticationMethodsUsed" TransformationMethod="AddItemToStringCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="AuthenticationMethodUsed" TransformationClaimType="item" />
          <InputClaim ClaimTypeReferenceId="AuthenticationMethodsUsed" TransformationClaimType="collection" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="AuthenticationMethodsUsed" TransformationClaimType="collection" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CreatePasswordAuthenticationMethodClaim" TransformationMethod="CreateStringClaim">
        <InputParameters>
          <InputParameter Id="value" DataType="string" Value="Password" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="AuthenticationMethodUsed" TransformationClaimType="createdClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CreateOneTimePasscodeAuthenticationMethodClaim" TransformationMethod="CreateStringClaim">
        <InputParameters>
          <InputParameter Id="value" DataType="string" Value="OneTimePasscode" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="AuthenticationMethodUsed" TransformationClaimType="createdClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CreateEmailsFromOtherMailsAndSignInNamesInfo" TransformationMethod="AddItemToStringCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="signInNamesInfo.emailAddress" TransformationClaimType="item" />
          <InputClaim ClaimTypeReferenceId="otherMails" TransformationClaimType="collection" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="emails" TransformationClaimType="collection" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="AddStrongAuthenticationEmailToEmails" TransformationMethod="AddItemToStringCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="strongAuthenticationEmailAddress" TransformationClaimType="item" />
          <InputClaim ClaimTypeReferenceId="emails" TransformationClaimType="collection" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="emails" TransformationClaimType="collection" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CreateOtherMailsFromEmail" TransformationMethod="AddItemToStringCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="email" TransformationClaimType="item" />
          <InputClaim ClaimTypeReferenceId="otherMails" TransformationClaimType="collection" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="otherMails" TransformationClaimType="collection" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="GetEmailFromEmails" TransformationMethod="GetSingleItemFromStringCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="emails" TransformationClaimType="collection" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="ReadOnlyEmail" TransformationClaimType="extractedItem" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CreateEmailFromOtherMails" TransformationMethod="GetSingleItemFromStringCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="otherMails" TransformationClaimType="collection" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="email" TransformationClaimType="extractedItem" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CreateRandomUPNUserName" TransformationMethod="CreateRandomString">
        <InputParameters>
          <InputParameter Id="randomGeneratorType" DataType="string" Value="GUID" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="upnUserName" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CreateUserPrincipalName" TransformationMethod="FormatStringClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="upnUserName" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="stringFormat" DataType="string" Value="cpim_{0}@{RelyingPartyTenantId}" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="userPrincipalName" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="ConvertStringToPhoneNumber" TransformationMethod="ConvertStringToPhoneNumberClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="countryCode" TransformationClaimType="country" />
          <InputClaim ClaimTypeReferenceId="nationalNumber" TransformationClaimType="phoneNumberString" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="signInNames.phoneNumber" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetPhoneNumberIfPredicateMatch" TransformationMethod="CopyClaimIfPredicateMatch">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="signInNamePhoneEmail" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="phoneNumber" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetEmailCombinationIfPredicateMatch" TransformationMethod="CopyClaimIfPredicateMatch">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="signInNamePhoneEmail" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="emailCombination" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="IsPhoneIdentifierPresent" TransformationMethod="DoesClaimExist">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="phoneNumber" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="isLocalAccountPhoneSignIn" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="IsEmailMfaRegistered" TransformationMethod="DoesClaimExist">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="ReadOnlyEmail" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="IsEmailMfaRegistered" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="IsPhoneMfaRegistered" TransformationMethod="DoesClaimExist">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="strongAuthenticationPhoneNumber" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="IsPhoneMfaRegistered" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="IsMfaRegistered" TransformationMethod="OrClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="IsEmailMfaRegistered" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="IsPhoneMfaRegistered" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="IsMfaRegistered" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CopyEmailFromCombination" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="emailCombination" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="email" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetNeedToPerformMFAWithEnroll" TransformationMethod="OrClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="mfaEnroll" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="needToPerformMfa" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="needToPerformMfa" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetNeedToPerformMFAForSignUp" TransformationMethod="OrClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="needToPerformMfaSignUp" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="needToPerformMfa" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="needToPerformMfa" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetNeedToPerformMFAForSignIn" TransformationMethod="OrClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="needToPerformMfaSignIn" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="needToPerformMfa" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="needToPerformMfa" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="GetNationalNumberAndCountryCodeIfInternationalFormat" TransformationMethod="GetNationalNumberAndCountryCodeFromPhoneNumberString">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="phoneNumber" TransformationClaimType="phoneNumber" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="throwExceptionOnFailure" DataType="boolean" Value="false" />
          <InputParameter Id="countryCodeType" DataType="string" Value="ISO3166" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="phoneNumber" TransformationClaimType="nationalNumber" />
          <OutputClaim ClaimTypeReferenceId="countryCode" TransformationClaimType="countryCode" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="PhoneNumberToNationalNumber" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="phoneNumber" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="nationalNumber" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CheckIfStrongAuthEmailExists" TransformationMethod="DoesClaimExist">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="strongAuthenticationEmailAddress" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="strongAuthEmailExists" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="ThrowErrorIfStrongAuthEmailDoesNotExist" TransformationMethod="AssertBooleanClaimIsEqualToValue">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="strongAuthEmailExists" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="valueToCompareTo" DataType="boolean" Value="true" />
        </InputParameters>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CompareOldAndNewPassword" TransformationMethod="CompareClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="password" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="newPassword" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="operator" DataType="string" Value="EQUAL" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="samePassword" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="ThrowErrorWhenPassowrdIsSame" TransformationMethod="AssertBooleanClaimIsEqualToValue">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="samePassword" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="valueToCompareTo" DataType="boolean" Value="false" />
        </InputParameters>
      </ClaimsTransformation>
      <ClaimsTransformation Id="EmailToLogonIdentifier" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="email" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="logonIdentifier" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="UsernameToLogonIdentifier" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="UserId" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="logonIdentifier" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CreateSubjectClaimFromObjectID" TransformationMethod="CreateStringClaim">
        <InputParameters>
          <InputParameter Id="value" DataType="string" Value="Not supported currently. Use oid claim." />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="sub" TransformationClaimType="createdClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CreateSubjectClaimFromAlternativeSecurityId" TransformationMethod="CreateStringClaim">
        <InputParameters>
          <InputParameter Id="value" DataType="string" Value="Not supported currently. Use oid claim." />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="sub" TransformationClaimType="createdClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <!-- <ClaimsTransformation Id="CreateAlternativeSecurityId" TransformationMethod="CreateAlternativeSecurityId">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="userId" TransformationClaimType="key" />
          <InputClaim ClaimTypeReferenceId="identityProvider" TransformationClaimType="identityProvider" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="alternativeSecurityId" TransformationClaimType="alternativeSecurityId" />
        </OutputClaims>
      </ClaimsTransformation> -->
      <ClaimsTransformation Id="CreateLocalAccountIssuerClaim" TransformationMethod="CreateStringClaim">
        <InputParameters>
          <InputParameter Id="value" DataType="string" Value="{RelyingPartyTenantId}" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="objectIdentityLocalAccountIssuer" TransformationClaimType="createdClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="PhoneNumberToString" TransformationMethod="ConvertPhoneNumberClaimToString">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="signInNames.phoneNumber" TransformationClaimType="phoneNumber" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="phoneNumberAsString" TransformationClaimType="phoneNumberString" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CreateObjectIdentityForEmail" TransformationMethod="CreateObjectIdentity">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="email" TransformationClaimType="issuerAssignedId" />
          <InputClaim ClaimTypeReferenceId="objectIdentityLocalAccountIssuer" TransformationClaimType="identityProvider" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="signInType" DataType="string" Value="emailAddress" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="objectIdentity" TransformationClaimType="objectIdentity" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CreateObjectIdentityForLogonName" TransformationMethod="CreateObjectIdentity">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="userId" TransformationClaimType="issuerAssignedId" />
          <InputClaim ClaimTypeReferenceId="objectIdentityLocalAccountIssuer" TransformationClaimType="identityProvider" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="signInType" DataType="string" Value="userName" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="objectIdentity" TransformationClaimType="objectIdentity" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CreateObjectIdentityForPhone" TransformationMethod="CreateObjectIdentity">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="phoneNumberAsString" TransformationClaimType="issuerAssignedId" />
          <InputClaim ClaimTypeReferenceId="objectIdentityLocalAccountIssuer" TransformationClaimType="identityProvider" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="signInType" DataType="string" Value="phoneNumber" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="objectIdentity" TransformationClaimType="objectIdentity" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CreateObjectIdentityForSocialIdps" TransformationMethod="CreateObjectIdentity">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="userId" TransformationClaimType="issuerAssignedId" />
          <InputClaim ClaimTypeReferenceId="identityProvider" TransformationClaimType="identityProvider" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="signInType" DataType="string" Value="federated" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="objectIdentity" TransformationClaimType="objectIdentity" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="AddToObjectIdentityCollection" TransformationMethod="AddItemToObjectIdentityCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="objectIdentity" TransformationClaimType="objectIdentity" />
          <InputClaim ClaimTypeReferenceId="objectIdentityCollection" TransformationClaimType="collection" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="objectIdentityCollection" TransformationClaimType="collection" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CreateDisplayNameFromFirstNameAndLastName" TransformationMethod="FormatStringMultipleClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="givenName" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="surName" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="stringFormat" DataType="string" Value="{0} {1}" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="displayName" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="AssertEmailAndStrongAuthenticationEmailAddressAreEqual" TransformationMethod="AssertStringClaimsAreEqual">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="strongAuthenticationEmailAddress" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="email" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="stringComparison" DataType="string" Value="ordinalIgnoreCase" />
        </InputParameters>
      </ClaimsTransformation>
      <ClaimsTransformation Id="DoesExtentionAccountEnabledPhoneExist" TransformationMethod="DoesClaimExist">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="extension_cpiminternal_useAccountEnabledForPhone" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="isAccountEnabledPhonePresent" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="NegateAccountEnabled" TransformationMethod="CompareBooleanClaimToValue">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="accountEnabled" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="valueToCompareTo" DataType="boolean" Value="false" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="isPhoneSignInBlocked" TransformationClaimType="compareResult" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="ShouldBlockPhoneSignIn" TransformationMethod="AndClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="isAccountEnabledPhonePresent" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="isPhoneSignInBlocked" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="isPhoneSignInBlocked" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="ThrowIfBlockPhoneSignIn" TransformationMethod="AssertBooleanClaimIsEqualToValue">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="isPhoneSignInBlocked" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="valueToCompareTo" DataType="boolean" Value="false" />
        </InputParameters>
      </ClaimsTransformation>
      <ClaimsTransformation Id="AssertAccountEnabledIsTrue" TransformationMethod="AssertBooleanClaimIsEqualToValue">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="accountEnabled" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="valueToCompareTo" DataType="boolean" Value="true" />
        </InputParameters>
      </ClaimsTransformation>
      <ClaimsTransformation Id="AssertRefreshTokenIssuedLaterThanValidFromDate" TransformationMethod="AssertDateTimeIsGreaterThan">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="refreshTokenIssuedOnDateTime" TransformationClaimType="leftOperand" />
          <InputClaim ClaimTypeReferenceId="refreshTokensValidFromDateTime" TransformationClaimType="rightOperand" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="AssertIfEqualTo" DataType="boolean" Value="false" />
          <InputParameter Id="AssertIfRightOperandIsNotPresent" DataType="boolean" Value="true" />
          <InputParameter Id="TreatAsEqualIfWithinMillseconds" DataType="int" Value="300000" />
        </InputParameters>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CreateUserId" TransformationMethod="ConvertNumberToStringClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="numericUserId" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="UserId" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="IsUserMinorAndRequireParentalConsent" TransformationMethod="AndClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="isMinor" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="doRegulationsRequireParentalConsent" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="isMinorAndRequiresParentalConsent" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetIsUserMinorAndIgnoreConsent" TransformationMethod="AndClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="isMinor" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="ignoreConsent" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="isMinorAndIgnoreConsent" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetIsMinorNeedToBeBlocked" TransformationMethod="OrClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="isMinorAndRequiresParentalConsent" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="isMinorAndIgnoreConsent" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="isMinorNeedToBeBlocked" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetBlockMinorUserUsingResponseOption" TransformationMethod="AndClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="isMinorNeedToBeBlocked" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="shouldBlockMinor" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="blockMinorUser" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CalculateAgeGroupAndConsent" TransformationMethod="GetAgeGroupConsentProvidedAndRequiresConsent">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="cpiminternal_dateOfBirth" TransformationClaimType="dateOfBirth" />
          <InputClaim ClaimTypeReferenceId="cpiminternal_legalCountry" TransformationClaimType="countryCode" />
          <InputClaim ClaimTypeReferenceId="consentProvidedForMinor" TransformationClaimType="consentProvidedForMinor" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="ageGroup" TransformationClaimType="ageGroup" />
          <OutputClaim ClaimTypeReferenceId="doRegulationsRequireParentalConsent" TransformationClaimType="requiresParentalConsent" />
          <OutputClaim ClaimTypeReferenceId="consentProvidedForMinor" TransformationClaimType="consentProvidedForMinor" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="ReEvaluateAgeGroupAndConsent" TransformationMethod="GetAgeGroupConsentProvidedAndRequiresConsent">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="cpiminternal_dateOfBirth" TransformationClaimType="dateOfBirth" />
          <InputClaim ClaimTypeReferenceId="cpiminternal_legalCountry" TransformationClaimType="countryCode" />
          <InputClaim ClaimTypeReferenceId="consentProvidedForMinor" TransformationClaimType="consentProvidedForMinor" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="ageGroup_current" TransformationClaimType="ageGroup" />
          <OutputClaim ClaimTypeReferenceId="doRegulationsRequireParentalConsent" TransformationClaimType="requiresParentalConsent" />
          <OutputClaim ClaimTypeReferenceId="consentProvidedForMinor_current" TransformationClaimType="consentProvidedForMinor" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetIsMinor" TransformationMethod="SetClaimsIfStringsMatch">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="ageGroup" TransformationClaimType="claimToMatch" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="matchTo" DataType="string" Value="Minor" />
          <InputParameter Id="stringComparison" DataType="string" Value="ordinalIgnoreCase" />
          <InputParameter Id="outputClaimIfMatched" DataType="string" Value="B2C_V1_90001" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="responseCode" TransformationClaimType="outputClaim" />
          <OutputClaim ClaimTypeReferenceId="isMinor" TransformationClaimType="stringCompareResultClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="GetResponseMsgMappedToResponseCode" TransformationMethod="GetMappedValueFromLocalizedCollection">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="responseCode" TransformationClaimType="mapFromClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="responseMsg" TransformationClaimType="restrictionValueClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="MergeResponseMsgAndCode" TransformationMethod="FormatStringMultipleClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="responseCode" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="responseMsg" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="stringFormat" DataType="string" Value="{0}%3A {1}" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="response" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CalculateIsUserMinorAndRequireParentalConsent" TransformationMethod="OrClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="islegalAgeGroupClassificationUndefined" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="isLegalAgeGroupClassificationMinorWithoutConsent" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="isMinorAndRequiresParentalConsent" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetIsLegalAgeGroupClassificationUndefined" TransformationMethod="SetClaimsIfStringsMatch">
        <InputClaims>
          <!-- legalAgeGroupClassification is readonly claim  and gets set only by AAD based on ageGroup value. 
					So we are writing ageGroup value in AADWrite call. This internally sets legalAgeGroupClassification -->
          <InputClaim ClaimTypeReferenceId="legalAgeGroupClassification" TransformationClaimType="claimToMatch" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="matchTo" DataType="string" Value="undefined" />
          <InputParameter Id="stringComparison" DataType="string" Value="ordinalIgnoreCase" />
          <InputParameter Id="outputClaimIfMatched" DataType="string" Value="B2C_V1_90001" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="responseCode" TransformationClaimType="outputClaim" />
          <OutputClaim ClaimTypeReferenceId="islegalAgeGroupClassificationUndefined" TransformationClaimType="stringCompareResultClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetIsLegalAgeGroupClassificationMinorWithoutConsent" TransformationMethod="SetClaimsIfStringsMatch">
        <InputClaims>
          <!-- legalAgeGroupClassification is readonly claim  and gets set only by AAD based on ageGroup value. 
					So we are writing ageGroup value in AADWrite call. This internally sets legalAgeGroupClassification -->
          <InputClaim ClaimTypeReferenceId="legalAgeGroupClassification" TransformationClaimType="claimToMatch" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="matchTo" DataType="string" Value="minorWithoutParentalConsent" />
          <InputParameter Id="stringComparison" DataType="string" Value="ordinalIgnoreCase" />
          <InputParameter Id="outputClaimIfMatched" DataType="string" Value="B2C_V1_90001" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="responseCode" TransformationClaimType="outputClaim" />
          <OutputClaim ClaimTypeReferenceId="isLegalAgeGroupClassificationMinorWithoutConsent" TransformationClaimType="stringCompareResultClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="IsDateOfBirthPresent" TransformationMethod="DoesClaimExist">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="cpiminternal_dateOfBirth" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="isDoBPresent" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="IsLegalCountryPresent" TransformationMethod="DoesClaimExist">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="cpiminternal_legalCountry" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="isLegalCountryPresent" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="EvaluateSkipProgressiveProfilePage" TransformationMethod="AndClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="isDoBPresent" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="isLegalCountryPresent" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="skipProgressiveProfilePage" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="HasAgeGroupValueChanged" TransformationMethod="CompareClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="ageGroup" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="ageGroup_current" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="operator" DataType="string" Value="NOT EQUAL" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="ageGroupValueChanged" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="HasConsentProvidedForMinorValueChanged" TransformationMethod="CompareClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="consentProvidedForMinor" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="consentProvidedForMinor_current" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="operator" DataType="string" Value="NOT EQUAL" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="consentProvidedForMinorValueChanged" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="EvaluateAgeGatingValuesChanged" TransformationMethod="OrClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="ageGroupValueChanged" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="consentProvidedForMinorValueChanged" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="ageGatingValuesChanged" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="UpdateAgeGroup" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="ageGroup_current" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="ageGroup" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="GetStrongAuthenticationEmail" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="strongAuthenticationEmailAddress" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="ReadOnlyEmail" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="GetNationalNumber" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="oldNationalNumber" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="nationalNumber" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="GetNationalNumberFromNewPhoneNumber" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="newNationalNumber" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="nationalNumber" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="GetEmailFromReadOnlyEmail" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="ReadOnlyEmail" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="email" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetStrongAuthenticationEmail" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="email" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="strongAuthenticationEmailAddress" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="UpdateConsentProvidedForMinor" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="consentProvidedForMinor_current" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="consentProvidedForMinor" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetCAChallengeIsMfa" TransformationMethod="StringCollectionContains">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="conditionalAccessClaimCollection" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="item" DataType="string" Value="mfa" />
          <InputParameter Id="ignoreCase" DataType="string" Value="true" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="CAChallengeIsMfa" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetCAChallengeIsChgPwd" TransformationMethod="StringCollectionContains">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="conditionalAccessClaimCollection" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="item" DataType="string" Value="chg_pwd" />
          <InputParameter Id="ignoreCase" DataType="string" Value="true" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="CAChallengeIsChgPwd" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetCAChallengeIsBlock" TransformationMethod="StringCollectionContains">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="conditionalAccessClaimCollection" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="item" DataType="string" Value="block" />
          <InputParameter Id="ignoreCase" DataType="string" Value="true" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="CAChallengeIsBlock" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetCABlockResponseCode" TransformationMethod="SetClaimIfBooleansMatch">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="CAChallengeIsBlock" TransformationClaimType="claimToMatch" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="matchTo" DataType="string" Value="true" />
          <InputParameter Id="stringComparison" DataType="string" Value="ordinalIgnoreCase" />
          <InputParameter Id="outputClaimIfMatched" DataType="string" Value="B2C_V1_90002" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="responseCode" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="GenerateNeedToPerformMFAFlag" TransformationMethod="OrClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="CAChallengeIsMfa" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="CAChallengeIsChgPwd" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="needToPerformMfa" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="ExtractGivenNameFromLinkedInResponse" TransformationMethod="GetSingleItemFromJson">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="givenName" TransformationClaimType="inputJson" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="nullStringClaim" TransformationClaimType="key" />
          <OutputClaim ClaimTypeReferenceId="givenName" TransformationClaimType="value" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="ExtractSurNameFromLinkedInResponse" TransformationMethod="GetSingleItemFromJson">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="surname" TransformationClaimType="inputJson" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="nullStringClaim" TransformationClaimType="key" />
          <OutputClaim ClaimTypeReferenceId="surname" TransformationClaimType="value" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CalculateBlockUserSignUp" TransformationMethod="CompareClaimToValue">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="restApiAction" TransformationClaimType="inputClaim1" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="compareTo" DataType="string" Value="ShowBlockPage" />
          <InputParameter Id="operator" DataType="string" Value="equal" />
          <InputParameter Id="ignoreCase" DataType="string" Value="true" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="blockUserSignUp" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetResponseMessage" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="restApiUserMessage" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="responseMsg" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SetResponseCode" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="restApiCode" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="responsecode" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <!-- Authenticator ClaimsTransformations -->
      <ClaimsTransformation Id="CreateSecret" TransformationMethod="CreateOtpSecret">
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="secretKey" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CreateIssuer" TransformationMethod="CreateStringClaim">
        <InputParameters>
          <InputParameter Id="value" DataType="string" Value="{AuthenticatorIssuer}" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="issuer" TransformationClaimType="createdClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CreateUriLabel" TransformationMethod="FormatStringMultipleClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="issuer" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="totpIdentifier" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="stringFormat" DataType="string" Value="{0}:{1}" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="uriLabel" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="CreateUriString" TransformationMethod="BuildUri">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="uriLabel" TransformationClaimType="path" />
          <InputClaim ClaimTypeReferenceId="secretKey" TransformationClaimType="query.secret" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="scheme" DataType="string" Value="otpauth" />
          <InputParameter Id="host" DataType="string" Value="totp" />
          <InputParameter Id="query.issuer" DataType="string" Value="{AuthenticatorIssuer}" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="qrCodeContent" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="EmailToTotpIdentifier" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="email" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="totpIdentifier" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="UserIdToLogonIdentifier" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="UserId" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="totpIdentifier" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="PhoneNumberIdToLogonIdentifier" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="phoneNumber" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="totpIdentifier" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="SigninNamePhoneNumberIdToTotpIdentifier" TransformationMethod="ConvertPhoneNumberClaimToString">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="signInNames.phoneNumber" TransformationClaimType="phoneNumber" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="totpIdentifier" TransformationClaimType="phoneNumberString" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="ObjectIdToOtpIdentifier" TransformationMethod="CopyClaim">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="objectId" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="identifier" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <ClaimsTransformation Id="VerifyOtpPasswordReset" TransformationMethod="DoesClaimExist">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="otpGenerated" TransformationClaimType="inputClaim" />
        </InputClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="otpVerified" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
    </ClaimsTransformations>
    <ClientDefinitions>
      <ClientDefinition Id="DefaultWeb">
        <ClientUIFilterFlags>LineMarkers, MetaRefresh</ClientUIFilterFlags>
      </ClientDefinition>
    </ClientDefinitions>
    <!--
      This policy has custom page branding, so override just the LoadUri (other components stay the same from the base definition)
    -->
    <ContentDefinitions>
      <ContentDefinition Id="api.error">
        <LoadUri>~/tenant/default/exception.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:globalexception:1.1.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Error page</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.idpselections">
        <LoadUri>~/tenant/default/idpSelector.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:idpselection:1.0.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Idp selection page</Item>
          <Item Key="language.intro">Sign in</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.idpselections.signup">
        <LoadUri>~/tenant/default/idpSelector.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:idpselection:1.0.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Idp selection page</Item>
          <Item Key="language.intro">Sign up</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.idpselections.signup1.1">
        <LoadUri>~/tenant/templates/AzureBlue/idpSelector.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:idpselection:1.0.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Idp selection page</Item>
          <Item Key="language.intro">Sign up</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.signinandsignup">
        <LoadUri>~/tenant/default/unified.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:unifiedssd:1.0.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Signin and Signup</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.signin.profileupdate">
        <LoadUri>~/tenant/default/signinProfileUpdate.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:unifiedssp:1.0.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Sign in</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.signinandsignupwithpassword">
        <LoadUri>~/tenant/default/unified.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:unifiedssp:1.0.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Signin and Signup</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.signinwithpassword">
        <LoadUri>~/tenant/default/signin.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:unifiedssp:1.0.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Signin</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.signinandsignupwithpassword1.1">
        <LoadUri>~/tenant/templates/AzureBlue/unified.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:unifiedssp:2.1.1</DataUri>
        <Metadata>
          <Item Key="DisplayName">Signin and Signup</Item>
          <Item Key="setting.bottomUnderFormClaimsProviderSelections">ChangePhoneNumber</Item>
          <Item Key="setting.forgotPasswordLinkOverride">ForgotPassword</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.signin">
        <LoadUri>~/tenant/templates/AzureBlue/idpSelector.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:unifiedssp:2.1.1</DataUri>
        <Metadata>
          <Item Key="DisplayName">Signin</Item>
          <Item Key="setting.bottomUnderFormClaimsProviderSelections">ChangePhoneNumber</Item>
          <Item Key="setting.forgotPasswordLinkOverride">ForgotPassword</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.phoneSignUpCollectEmailAddress">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.1</DataUri>
        <Metadata>
          <Item Key="DisplayName">Verify email to sign up</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.phoneSignInCollectEmailAddress">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.1</DataUri>
        <Metadata>
          <Item Key="DisplayName">Verify email to sign up</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.phoneSignUp">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.1</DataUri>
        <Metadata>
          <Item Key="DisplayName">Verify phone to sign up</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.phoneInput">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.1</DataUri>
        <Metadata>
          <Item Key="DisplayName">Enter phone number to continue</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.newPhoneNumber">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.1</DataUri>
        <Metadata>
          <Item Key="DisplayName">Verify new phone number</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.emailSignIn">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Use email to sign in</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.changePhoneNumberVerifyEmailAddress">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.1</DataUri>
        <Metadata>
          <Item Key="DisplayName">Verify email address</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.phoneSignIn">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.1</DataUri>
        <Metadata>
          <Item Key="DisplayName">Verify phone to sign in</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.signuporsignin-phone-email">
        <LoadUri>~/tenant/templates/AzureBlue/unified.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:unifiedssp:2.1.1</DataUri>
        <Metadata>
          <Item Key="DisplayName">Signin and Signup using phone or email</Item>
          <Item Key="setting.bottomUnderFormClaimsProviderSelections">ChangePhoneNumber</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.phonefactor">
        <LoadUri>~/tenant/default/phoneFactor.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:multifactor:1.0.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Multi-factor authentication page</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.phonefactor1.1">
        <LoadUri>~/tenant/default/multifactor-1.0.0.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:multifactor:1.1.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Multi-factor authentication page</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.selfasserted">
        <LoadUri>~/tenant/default/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:selfasserted:1.0.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Collect information from user page</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.selfasserted1.1">
        <LoadUri>~/tenant/default/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:selfasserted:1.1.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Collect information from user page</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.selfasserted2.1">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.1</DataUri>
        <Metadata>
          <Item Key="DisplayName">Collect information from user page</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.selfasserted.phonesuccess">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.1</DataUri>
        <Metadata>
          <Item Key="DisplayName">Collect information from user page</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.selfasserted.emailverify">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.1</DataUri>
        <Metadata>
          <Item Key="DisplayName">Verify user's email address</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.selfasserted.totp">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.1</DataUri>
        <Metadata>
          <Item Key="DisplayName">Collect information from user page</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.selfasserted.profileupdate">
        <LoadUri>~/tenant/default/updateProfile.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:selfasserted:1.0.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Collect information from user page</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.selfasserted.profileupdate2.1">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.1</DataUri>
        <Metadata>
          <Item Key="DisplayName">Collect information from user page</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.selfasserted.blockminor">
        <LoadUri>~/tenant/default/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:selfasserted:1.1.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Show blocking page for minors</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.selfasserted.blockpage">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.1</DataUri>
        <Metadata>
          <Item Key="DisplayName">Show blocked page</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.selfasserted.progressiveprofile">
        <LoadUri>~/tenant/default/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:selfasserted:1.1.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Collect information from user page</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.selfasserted.expiredpassword">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.1</DataUri>
        <Metadata>
          <Item Key="DisplayName">Update password</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.localaccountsignup">
        <LoadUri>~/tenant/default/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:selfasserted:1.0.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Local account sign up page</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.localaccountsignup1.1">
        <LoadUri>~/tenant/default/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:selfasserted:1.1.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Local account sign up page</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.localaccountsignup2.1">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.1</DataUri>
        <Metadata>
          <Item Key="DisplayName">Local account sign up page</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.localaccountsignin">
        <LoadUri>~/tenant/default/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:selfasserted:1.0.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Local account sign in page</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.localaccountpasswordchange">
        <LoadUri>~/tenant/default/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:selfasserted:1.0.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Local account change password page</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.localaccountpasswordchange1.1">
        <LoadUri>~/tenant/default/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:selfasserted:1.1.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Local account change password page</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.localaccountpasswordchange1.2">
        <LoadUri>~/tenant/default/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:selfasserted:1.1.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Local account change password page</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.selfasserted.blockpagesignup">
        <LoadUri>~/tenant/default/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:selfasserted:1.1.0</DataUri>
        <Metadata>
          <Item Key="DisplayName">Show blocked page when Signup is blocked</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.selfasserted.localaccountpasswordchange2.1">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.1</DataUri>
        <Metadata>
          <Item Key="DisplayName">Local account change password page</Item>
        </Metadata>
      </ContentDefinition>
      <ContentDefinition Id="api.selfasserted.localaccountlookup2.1">
        <LoadUri>~/tenant/templates/AzureBlue/selfAsserted.cshtml</LoadUri>
        <RecoveryUri>~/common/default_page_error.html</RecoveryUri>
        <DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:2.1.1</DataUri>
        <Metadata>
          <Item Key="DisplayName">Local account lookup page for password reset</Item>
        </Metadata>
      </ContentDefinition>
    </ContentDefinitions>
    <Localization Enabled="false">
      <!-- <SupportedLanguages PolicyLanguage="en" DefaultLanguage="en">
        <SupportedLanguage>en</SupportedLanguage>
      </SupportedLanguages> -->
    </Localization>
    <DisplayControls>
      <DisplayControl Id="captchaControlChallengeCode" UserInterfaceControlType="CaptchaControl" DisplayName="Help us beat the bots">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="challengeType" />
          <InputClaim ClaimTypeReferenceId="challengeId" />
        </InputClaims>
        <DisplayClaims>      
          <DisplayClaim ClaimTypeReferenceId="challengeType" ControlClaimType="ChallengeType"/>
          <DisplayClaim ClaimTypeReferenceId="challengeId" ControlClaimType="ChallengeId"/> 
          <DisplayClaim ClaimTypeReferenceId="challengeString" ControlClaimType="ChallengeString"/>
          <DisplayClaim ClaimTypeReferenceId="captchaEntered" ControlClaimType="CaptchaEntered"/>
        </DisplayClaims>         
        <Actions>
          <Action Id="GetChallenge">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="HIP-GetChallenge" />
            </ValidationClaimsExchange>
          </Action>  
          <Action Id="VerifyChallenge">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="HIP-VerifyChallenge" />
            </ValidationClaimsExchange>
          </Action>               
        </Actions>       
      </DisplayControl>   
      <DisplayControl Id="emailVerificationControl" UserInterfaceControlType="VerificationControl">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="email" />
        </InputClaims>
        <DisplayClaims>
          <DisplayClaim ClaimTypeReferenceId="email" Required="true" />
          <DisplayClaim ClaimTypeReferenceId="emailVerificationCode" ControlClaimType="VerificationCode" Required="true" />
        </DisplayClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="email" />
        </OutputClaims>
        <Actions>
          <Action Id="SendCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="AadSspr-SendCode" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="GenerateOtpEmailCustomizationApiConnector" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="SendEmailForOTPVerificationRestful" />
            </ValidationClaimsExchange>
          </Action>
          <Action Id="VerifyCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="AadSspr-VerifyCode" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="VerifyOtpEmailCustomizationApiConnector" />
            </ValidationClaimsExchange>
          </Action>
        </Actions>
      </DisplayControl>
      <DisplayControl Id="emailVerificationControlSignup" UserInterfaceControlType="VerificationControl">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="email" />
        </InputClaims>
        <DisplayClaims>
          <DisplayClaim ClaimTypeReferenceId="email" Required="true" />
          <DisplayClaim ClaimTypeReferenceId="emailVerificationCode" ControlClaimType="VerificationCode" Required="true" />
        </DisplayClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="email" />
        </OutputClaims>
        <Actions>
          <Action Id="SendCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="AadSspr-SendCodeSignup" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="GenerateOtpSignupApiConnector" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="SendEmailForSignupRestful" />
            </ValidationClaimsExchange>
          </Action>
          <Action Id="VerifyCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="AadSspr-VerifyCodeSignup" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="VerifyOtpSignupApiConnector" />
            </ValidationClaimsExchange>
          </Action>
        </Actions>
      </DisplayControl>
      <DisplayControl Id="emailVerificationControlMfa" UserInterfaceControlType="VerificationControl">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="ReadOnlyEmail" />
        </InputClaims>
        <DisplayClaims>
          <DisplayClaim ClaimTypeReferenceId="ReadOnlyEmail" Required="true" />
          <DisplayClaim ClaimTypeReferenceId="emailVerificationCode" ControlClaimType="VerificationCode" Required="true" />
        </DisplayClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="ReadOnlyEmail" />
        </OutputClaims>
        <Actions>
          <Action Id="SendCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="GetEmailFromReadOnlyEmail" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="GenerateOtpMfaApiConnector" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="SendEmailForMfaRestful" />
            </ValidationClaimsExchange>
          </Action>
          <Action Id="VerifyCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="GetEmailFromReadOnlyEmail" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="VerifyOtpMfaApiConnector" />
            </ValidationClaimsExchange>
          </Action>
        </Actions>
      </DisplayControl>
      <DisplayControl Id="emailVerificationControlPasswordReset" UserInterfaceControlType="VerificationControl">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="email" />
        </InputClaims>
        <DisplayClaims>
          <DisplayClaim ClaimTypeReferenceId="email" Required="true" />
          <DisplayClaim ClaimTypeReferenceId="emailVerificationCode" ControlClaimType="VerificationCode" Required="true" />
        </DisplayClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="email" />
        </OutputClaims>
        <Actions>
          <Action Id="SendCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="AadSspr-SendCodePasswordReset" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="GenerateOtpPasswordResetApiConnector" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="SendEmailForPasswordResetRestful" />
            </ValidationClaimsExchange>
          </Action>
          <Action Id="VerifyCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="AadSspr-VerifyCodePasswordReset" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="VerifyOtpPasswordResetApiConnector" />
            </ValidationClaimsExchange>
          </Action>
        </Actions>
      </DisplayControl>
      <DisplayControl Id="phoneVerificationControl" UserInterfaceControlType="VerificationControl">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="nationalNumber" />
          <InputClaim ClaimTypeReferenceId="countryCode" />
        </InputClaims>
        <DisplayClaims>
          <DisplayClaim ClaimTypeReferenceId="countryCode" ControlClaimType="CountryCode" Required="true" />
          <DisplayClaim ClaimTypeReferenceId="nationalNumber" ControlClaimType="Phone" Required="true" />
          <DisplayClaim ClaimTypeReferenceId="phoneVerificationCode" ControlClaimType="VerificationCode" Required="true" />
        </DisplayClaims>
        <Actions>
          <Action Id="SendCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="CombineCountryCodeAndNationalNumber" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="AzureMfa-SendSms" />
            </ValidationClaimsExchange>
          </Action>
          <Action Id="VerifyCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="CombineCountryCodeAndNationalNumber" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="AzureMfa-VerifySms" />
            </ValidationClaimsExchange>
          </Action>
        </Actions>
      </DisplayControl>
      <DisplayControl Id="newPhoneVerificationControl" UserInterfaceControlType="VerificationControl">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="newNationalNumber" />
          <InputClaim ClaimTypeReferenceId="countryCode" />
        </InputClaims>
        <DisplayClaims>
          <DisplayClaim ClaimTypeReferenceId="countryCode" ControlClaimType="CountryCode" Required="true" />
          <DisplayClaim ClaimTypeReferenceId="newNationalNumber" ControlClaimType="Phone" Required="true" />
          <DisplayClaim ClaimTypeReferenceId="phoneVerificationCode" ControlClaimType="VerificationCode" Required="true" />
        </DisplayClaims>
        <Actions>
          <Action Id="SendCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="GetNationalNumberFromNewPhoneNumber" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="CombineCountryCodeAndNationalNumber" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="AzureMfa-SendSms" />
            </ValidationClaimsExchange>
          </Action>
          <Action Id="VerifyCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="GetNationalNumberFromNewPhoneNumber" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="CombineCountryCodeAndNationalNumber" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="AzureMfa-VerifySms" />
            </ValidationClaimsExchange>
          </Action>
        </Actions>
      </DisplayControl>
      <DisplayControl Id="readonlyEmailVerificationControl" UserInterfaceControlType="VerificationControl">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="ReadOnlyEmail" />
        </InputClaims>
        <DisplayClaims>
          <DisplayClaim ClaimTypeReferenceId="ReadOnlyEmail" Required="true" />
          <DisplayClaim ClaimTypeReferenceId="emailVerificationCode" ControlClaimType="VerificationCode" Required="true" />
        </DisplayClaims>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="ReadOnlyEmail" />
        </OutputClaims>
        <Actions>
          <Action Id="SendCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="GetEmailFromReadOnlyEmail" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="AadSspr-SendCode" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="GenerateOtpEmailCustomizationApiConnector" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="SendEmailForOTPVerificationRestful" />
            </ValidationClaimsExchange>
          </Action>
          <Action Id="VerifyCode">
            <ValidationClaimsExchange>
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="GetEmailFromReadOnlyEmail" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="AadSspr-VerifyCode" />
              <ValidationClaimsExchangeTechnicalProfile TechnicalProfileReferenceId="VerifyOtpEmailCustomizationApiConnector" />
            </ValidationClaimsExchange>
          </Action>
        </Actions>
      </DisplayControl>
      <!-- Authenticator display control -->
      <DisplayControl Id="totpQrCodeControl" UserInterfaceControlType="QrCodeControl">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="qrCodeContent" />
        </InputClaims>
        <DisplayClaims>
          <DisplayClaim ClaimTypeReferenceId="qrCodeContent" ControlClaimType="QrCodeContent" />
        </DisplayClaims>
      </DisplayControl>
      <DisplayControl Id="authenticatorInfoControl" UserInterfaceControlType="AuthenticatorInfoControl">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="totpIdentifier" />
          <InputClaim ClaimTypeReferenceId="secretKey" />
        </InputClaims>
        <DisplayClaims>
          <DisplayClaim ClaimTypeReferenceId="totpIdentifier" />
          <DisplayClaim ClaimTypeReferenceId="secretKey" />
        </DisplayClaims>
      </DisplayControl>
      <DisplayControl Id="authenticatorAppIconControl" UserInterfaceControlType="AuthenticatorAppIconControl"></DisplayControl>
    </DisplayControls>
  </BuildingBlocks>

<ClaimsProviders>
    <ClaimsProvider>
      <DisplayName>AAD</DisplayName>
<TechnicalProfiles>
    <TechnicalProfile Id="LocalAccountDiscoveryUsingUserNameAndValidateStrongAuthenticationEmailAddressV3">
          <DisplayName>Reset password using username</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted.localaccountlookup2.1</Item>
            <Item Key="DisplayControl.emailVerificationControl.intro_msg">Verification is necessary. Please click Send button.</Item>
            <Item Key="DisplayControl.emailVerificationControl.success_send_code_msg">Verification code has been sent to your inbox. Please copy it to the input box below.</Item>
            <Item Key="DisplayControl.emailVerificationControl.failure_send_code_msg">We are having trouble verifying your email address. Please enter a valid email address and try again.</Item>
            <Item Key="DisplayControl.emailVerificationControl.success_verify_code_msg">E-mail address verified. You can now continue.</Item>
            <Item Key="DisplayControl.emailVerificationControl.failure_verify_code_msg">We are having trouble verifying your email address. Please try again.</Item>
            <Item Key="DisplayControl.emailVerificationControl.but_send_code">Send verification code</Item>
            <Item Key="DisplayControl.emailVerificationControl.but_verify_code">Verify code</Item>
            <Item Key="DisplayControl.emailVerificationControl.but_send_new_code">Send new code</Item>
            <Item Key="DisplayControl.emailVerificationControl.but_change_claims">Change e-mail</Item>
          </Metadata>
          <DisplayClaims>
            <DisplayClaim ClaimTypeReferenceId="UserId" Required="true" />
            <DisplayClaim DisplayControlReferenceId="emailVerificationControl" />
          </DisplayClaims>
          <IncludeTechnicalProfile ReferenceId="LocalAccountDiscoveryUsingUserNameAndValidateStrongAuthenticationEmailAddress" />
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <TechnicalProfile Id="LocalAccountDiscoveryUsingUserNameAndValidateStrongAuthenticationEmailAddress">
          <DisplayName>Reset password using username</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="ContentDefinitionReferenceId">api.localaccountpasswordchange1.1</Item>
            <Item Key="TokenLifeTimeInSeconds">3600</Item>
            <Item Key="AllowGenerationOfClaimsWithNullValues">true</Item>
            <Item Key="UserMessageIfClaimsTransformationStringsAreNotEqual">An account could not be found for the provided user ID.</Item>
            <Item Key="UserMessageIfClaimsTransformationBooleanValueIsNotEqual">Your account has been locked. Contact your support person to unlock it, then try again.</Item>
            <Item Key="LocalAccountType">Username</Item>
            <Item Key="LocalAccountProfile">true</Item>
            <!-- Reduce the default self-asserted retry limit of 7 for the reset journey -->
            <Item Key="setting.retryLimit">3</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="userId" Required="true" />
            <OutputClaim ClaimTypeReferenceId="email" PartnerClaimType="Verified.Email" Required="true" />
            <OutputClaim ClaimTypeReferenceId="emails" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="userPrincipalName" />
            <OutputClaim ClaimTypeReferenceId="strongAuthenticationPhoneNumber" />
            <OutputClaim ClaimTypeReferenceId="sub" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" />
            <OutputClaim ClaimTypeReferenceId="strongAuthenticationEmailAddress" />
            <OutputClaim ClaimTypeReferenceId="legalAgeGroupClassification" />
            <OutputClaim ClaimTypeReferenceId="ageGroup" />
            <OutputClaim ClaimTypeReferenceId="consentProvidedForMinor" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CreateSubjectClaimFromObjectID" />
          </OutputClaimsTransformations>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AAD-UserReadUsingUserNameAndValidateStrongAuthenticationEmailAddress" />
          </ValidationTechnicalProfiles>
          <IncludeClaimsFromTechnicalProfile>SelfAsserted-Input</IncludeClaimsFromTechnicalProfile>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
          <EnabledForUserJourneys>Never</EnabledForUserJourneys>
        </TechnicalProfile>

        <TechnicalProfile Id="AAD-UserReadUsingUserNameAndValidateStrongAuthenticationEmailAddress">
          <Metadata>
            <Item Key="Operation">Read</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="userId" PartnerClaimType="logonIdentifier" Required="true" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="accountEnabled" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="localAccountAuthentication" AlwaysUseDefaultValue="true" />
            <OutputClaim ClaimTypeReferenceId="strongAuthenticationEmailAddress" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="AssertEmailAndStrongAuthenticationEmailAddressAreEqual" />
            <OutputClaimsTransformation ReferenceId="AssertAccountEnabledIsTrue" />
            <OutputClaimsTransformation ReferenceId="CreateSubjectClaimFromObjectID" />
          </OutputClaimsTransformations>
          <IncludeTechnicalProfile ReferenceId="AAD-ReadCommon" />
        </TechnicalProfile>

       <TechnicalProfile Id="LocalAccountWritePasswordUsingObjectId-V2_2023_08_03">
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted.localaccountpasswordchange2.1</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="identifier" />
            <InputClaim ClaimTypeReferenceId="otpGenerated" PartnerClaimType="otpGenerated" />
          </InputClaims>
            <ValidationTechnicalProfiles>
              <ValidationTechnicalProfile ReferenceId="VerifyOtpPasswordReset">
                <!-- Check to see if the OTP has already been verified -->
                <Preconditions>
                  <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
                    <Value>otpVerified</Value>
                    <Action>SkipThisValidationTechnicalProfile</Action>
                  </Precondition>
                </Preconditions>
              </ValidationTechnicalProfile>
            </ValidationTechnicalProfiles>
          <IncludeTechnicalProfile ReferenceId="LocalAccountWritePasswordUsingObjectId" />
        </TechnicalProfile> 


        <TechnicalProfile Id="LocalAccountWritePasswordUsingObjectId">
          <DisplayName>Change password (username)</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.localaccountpasswordchange1.1</Item>
            <Item Key="TokenLifeTimeInSeconds">3600</Item>
            <!-- Reduce the default self-asserted retry limit of 7 for the reset journey -->
            <Item Key="setting.retryLimit">3</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" />
            <InputClaim ClaimTypeReferenceId="Verified.strongAuthenticationPhoneNumber" />
            <InputClaim ClaimTypeReferenceId="strongAuthenticationEmailAddress" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="newPassword" Required="true" />
            <OutputClaim ClaimTypeReferenceId="reenterPassword" Required="true" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AAD-UserWritePasswordUsingObjectId">
              <Preconditions>
                <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
                  <Value>executed-PhoneFactor</Value>
                  <Action>SkipThisValidationTechnicalProfile</Action>
                </Precondition>
              </Preconditions>
            </ValidationTechnicalProfile>
            <ValidationTechnicalProfile ReferenceId="AAD-UserWritePasswordUsingObjectIdWithoutStrongAuth">
              <Preconditions>
                <Precondition Type="ClaimsExist" ExecuteActionsIf="true">
                  <Value>executed-PhoneFactor</Value>
                  <Action>SkipThisValidationTechnicalProfile</Action>
                </Precondition>
              </Preconditions>
            </ValidationTechnicalProfile>
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>
        <TechnicalProfile Id="AAD-UserWritePasswordUsingObjectId">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">false</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <PersistedClaim ClaimTypeReferenceId="Verified.strongAuthenticationPhoneNumber" PartnerClaimType="strongAuthenticationPhoneNumber" />
            <PersistedClaim ClaimTypeReferenceId="newPassword" PartnerClaimType="password" />
            <PersistedClaim ClaimTypeReferenceId="strongAuthenticationEmailAddress" />
          </PersistedClaims>
          <IncludeTechnicalProfile ReferenceId="AAD-WriteCommon" />
        </TechnicalProfile>

        <TechnicalProfile Id="AAD-UserWritePasswordUsingObjectIdWithoutStrongAuth">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">false</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
          </InputClaims>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="objectId" />
            <PersistedClaim ClaimTypeReferenceId="newPassword" PartnerClaimType="password" />
          </PersistedClaims>
          <IncludeTechnicalProfile ReferenceId="AAD-WriteCommon" />
        </TechnicalProfile>

        <TechnicalProfile Id="AAD-ReadCommon">
          <Metadata>
            <Item Key="Operation">Read</Item>
            <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
          </Metadata>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="userPrincipalName" />
            <OutputClaim ClaimTypeReferenceId="displayName" />
            <OutputClaim ClaimTypeReferenceId="otherMails" />
            <OutputClaim ClaimTypeReferenceId="signInNamesInfo.emailAddress" PartnerClaimType="logonIdentifier.emailAddress" />
            <OutputClaim ClaimTypeReferenceId="strongAuthenticationPhoneNumber" />
            <OutputClaim ClaimTypeReferenceId="strongAuthenticationEmailAddress" />
            <OutputClaim ClaimTypeReferenceId="ageGroup" />
            <OutputClaim ClaimTypeReferenceId="consentProvidedForMinor" />
            <OutputClaim ClaimTypeReferenceId="legalAgeGroupClassification" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CreateEmailsFromOtherMailsAndSignInNamesInfo" />
            <OutputClaimsTransformation ReferenceId="AddStrongAuthenticationEmailToEmails" />
          </OutputClaimsTransformations>
          <IncludeTechnicalProfile ReferenceId="AAD-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="AAD-WriteCommon">
          <Metadata>
            <Item Key="Operation">Write</Item>
            <Item Key="UserMessageForInvalidClaimValue">An invalid value was presented for a property</Item>
          </Metadata>
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="passwordPolicies" DefaultValue="DisablePasswordExpiration" />
            <PersistedClaim ClaimTypeReferenceId="ageGroup" />
            <PersistedClaim ClaimTypeReferenceId="consentProvidedForMinor" />
          </PersistedClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="legalAgeGroupClassification" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CreateEmailsFromOtherMailsAndSignInNamesInfo" />
            <OutputClaimsTransformation ReferenceId="AddStrongAuthenticationEmailToEmails" />
          </OutputClaimsTransformations>
          <IncludeTechnicalProfile ReferenceId="AAD-Common" />
        </TechnicalProfile>

        <TechnicalProfile Id="LocalAccountDiscoveryUsingEmailAddressV3">
          <DisplayName>Reset password using email address</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted.localaccountlookup2.1</Item>
            <Item Key="DisplayControl.emailVerificationControl.intro_msg">Verification is necessary. Please click Send button.</Item>
            <Item Key="DisplayControl.emailVerificationControl.success_send_code_msg">Verification code has been sent to your inbox. Please copy it to the input box below.</Item>
            <Item Key="DisplayControl.emailVerificationControl.failure_send_code_msg">We are having trouble verifying your email address. Please enter a valid email address and try again.</Item>
            <Item Key="DisplayControl.emailVerificationControl.success_verify_code_msg">E-mail address verified. You can now continue.</Item>
            <Item Key="DisplayControl.emailVerificationControl.failure_verify_code_msg">We are having trouble verifying your email address. Please try again.</Item>
            <Item Key="DisplayControl.emailVerificationControl.but_send_code">Send verification code</Item>
            <Item Key="DisplayControl.emailVerificationControl.but_verify_code">Verify code</Item>
            <Item Key="DisplayControl.emailVerificationControl.but_send_new_code">Send new code</Item>
            <Item Key="DisplayControl.emailVerificationControl.but_change_claims">Change e-mail</Item>
          </Metadata>
          <DisplayClaims>
            <DisplayClaim DisplayControlReferenceId="emailVerificationControl" />
          </DisplayClaims>
          <IncludeTechnicalProfile ReferenceId="LocalAccountDiscoveryUsingEmailAddress" />
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>

        <!-- <TechnicalProfile Id="LocalAccountDiscoveryUsingEmailAddress">
          <DisplayName>Reset password using email address</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="IpAddressClaimReferenceId">IpAddress</Item>
            <Item Key="ContentDefinitionReferenceId">api.localaccountpasswordchange1.1</Item>
            <Item Key="TokenLifeTimeInSeconds">3600</Item>
            <Item Key="AllowGenerationOfClaimsWithNullValues">true</Item>
            <Item Key="LocalAccountType">Email</Item>
            <Item Key="LocalAccountProfile">true</Item>
        
            <Item Key="setting.retryLimit">3</Item>
            <Item Key="UserMessageIfClaimsTransformationBooleanValueIsNotEqual">Your account has been locked. Contact your support person to unlock it, then try again.</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="email" PartnerClaimType="Verified.Email" Required="true" />
            <OutputClaim ClaimTypeReferenceId="emails" />
            <OutputClaim ClaimTypeReferenceId="objectId" />
            <OutputClaim ClaimTypeReferenceId="userPrincipalName" />
            <OutputClaim ClaimTypeReferenceId="strongAuthenticationPhoneNumber" />
            <OutputClaim ClaimTypeReferenceId="sub" />
            <OutputClaim ClaimTypeReferenceId="authenticationSource" />
            <OutputClaim ClaimTypeReferenceId="legalAgeGroupClassification" />
            <OutputClaim ClaimTypeReferenceId="ageGroup" />
            <OutputClaim ClaimTypeReferenceId="consentProvidedForMinor" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CreateSubjectClaimFromObjectID" />
          </OutputClaimsTransformations>
          <ValidationTechnicalProfiles>
            <ValidationTechnicalProfile ReferenceId="AAD-UserReadUsingEmailAddress" />
          </ValidationTechnicalProfiles>
          <IncludeClaimsFromTechnicalProfile>SelfAsserted-Input</IncludeClaimsFromTechnicalProfile>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
          <EnabledForUserJourneys>Never</EnabledForUserJourneys>
        </TechnicalProfile> -->

</TechnicalProfiles>
</ClaimsProvider>

<ClaimsProvider>
      <DisplayName>One time password technical profiles</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="GenerateOtpCommon">
          <DisplayName>Generate one time password</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.OneTimePasswordProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="Operation">GenerateCode</Item>
            <Item Key="CodeExpirationInSeconds">1200</Item>
            <Item Key="CodeLength">6</Item>
            <Item Key="CharacterSet">0-9</Item>
            <Item Key="ReuseSameCode">true</Item>
            <Item Key="NumRetryAttempts">5</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="identifier" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="otp" PartnerClaimType="otpGenerated" />
          </OutputClaims>
          <EnabledForUserJourneys>Never</EnabledForUserJourneys>
        </TechnicalProfile>
        <TechnicalProfile Id="VerifyOtpCommon">
          <DisplayName>Verify one time password</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.OneTimePasswordProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="Operation">VerifyCode</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="identifier" />
            <InputClaim ClaimTypeReferenceId="emailVerificationCode" PartnerClaimType="otpToVerify" />
          </InputClaims>
          <EnabledForUserJourneys>Never</EnabledForUserJourneys>
        </TechnicalProfile>
        <TechnicalProfile Id="GenerateOtpEmailCustomizationApiConnector">
          <DisplayName>Generate one time password for email customization apiconnector</DisplayName>
          <IncludeTechnicalProfile ReferenceId="GenerateOtpCommon" />
          <EnabledForUserJourneys>Never</EnabledForUserJourneys>
        </TechnicalProfile>
        <TechnicalProfile Id="VerifyOtpEmailCustomizationApiConnector">
          <DisplayName>Verify one time password for email customizationapiconnector</DisplayName>
          <IncludeTechnicalProfile ReferenceId="VerifyOtpCommon" />
          <EnabledForUserJourneys>Never</EnabledForUserJourneys>
        </TechnicalProfile>
        <TechnicalProfile Id="GenerateOtpSignupApiConnector">
          <DisplayName>Generate one time password for Signup with apiconnector</DisplayName>
          <IncludeTechnicalProfile ReferenceId="GenerateOtpCommon" />
          <EnabledForUserJourneys>Never</EnabledForUserJourneys>
        </TechnicalProfile>
        <TechnicalProfile Id="VerifyOtpSignupApiConnector">
          <DisplayName>Verify one time password for Signup with apiconnector</DisplayName>
          <IncludeTechnicalProfile ReferenceId="VerifyOtpCommon" />
          <EnabledForUserJourneys>Never</EnabledForUserJourneys>
        </TechnicalProfile>
        <TechnicalProfile Id="GenerateOtpMfaApiConnector">
          <DisplayName>Generate one time password for Mfa with apiconnector</DisplayName>
          <IncludeTechnicalProfile ReferenceId="GenerateOtpCommon" />
          <EnabledForUserJourneys>Never</EnabledForUserJourneys>
        </TechnicalProfile>
        <TechnicalProfile Id="VerifyOtpMfaApiConnector">
          <DisplayName>Verify one time password for Mfa with apiconnector</DisplayName>
          <IncludeTechnicalProfile ReferenceId="VerifyOtpCommon" />
          <EnabledForUserJourneys>Never</EnabledForUserJourneys>
        </TechnicalProfile>
        <TechnicalProfile Id="GenerateOtpPasswordResetApiConnector">
          <DisplayName>Generate one time password for password reset with apiconnector</DisplayName>
          <IncludeTechnicalProfile ReferenceId="GenerateOtpCommon" />
          <EnabledForUserJourneys>Never</EnabledForUserJourneys>
        </TechnicalProfile>
        <TechnicalProfile Id="VerifyOtpPasswordResetApiConnector">
          <DisplayName>Verify one time password for password reset with apiconnector</DisplayName>
          <IncludeTechnicalProfile ReferenceId="VerifyOtpCommon" />
          <EnabledForUserJourneys>Never</EnabledForUserJourneys>
        </TechnicalProfile>
        <TechnicalProfile Id="GenerateOtpBackupRecoveryEmailApiConnector">
          <DisplayName>Generate one time password for backup recovery email with apiconnector</DisplayName>
          <IncludeTechnicalProfile ReferenceId="GenerateOtpCommon" />
          <EnabledForUserJourneys>Never</EnabledForUserJourneys>
        </TechnicalProfile>
        <TechnicalProfile Id="VerifyOtpBackupRecoveryEmailApiConnector">
          <DisplayName>Verify one time password for backup recovery email with apiconnector</DisplayName>
          <IncludeTechnicalProfile ReferenceId="VerifyOtpCommon" />
          <EnabledForUserJourneys>Never</EnabledForUserJourneys>
        </TechnicalProfile>
        <TechnicalProfile Id="GenerateOtpPasswordReset">
          <DisplayName>Generate one time password for password reset</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.OneTimePasswordProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="Operation">GenerateCode</Item>
            <Item Key="CodeExpirationInSeconds">600</Item>
            <Item Key="CodeLength">6</Item>
            <Item Key="CharacterSet">0-9</Item>
            <Item Key="NumRetryAttempts">5</Item>
            <Item Key="NumCodeGenerationAttempts">15</Item>
            <Item Key="ReuseSameCode">false</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="identifier" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="identifier" PartnerClaimType="identifier" />
            <OutputClaim ClaimTypeReferenceId="otpGenerated" PartnerClaimType="otpGenerated" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="ObjectIdToOtpIdentifier" />
          </OutputClaimsTransformations>
        </TechnicalProfile>
        <TechnicalProfile Id="VerifyOtpPasswordReset">
          <DisplayName>Verify one time password for password reset</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.OneTimePasswordProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="Operation">VerifyCode</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="identifier" />
            <InputClaim ClaimTypeReferenceId="otpGenerated" PartnerClaimType="otpToVerify" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="otpVerified" PartnerClaimType="otpVerified" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="VerifyOtpPasswordReset" />
          </OutputClaimsTransformations>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>

<ClaimsProvider>
      <DisplayName>Self Asserted</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="SelfAsserted-Input">
          <DisplayName>Self Asserted</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
            <Item Key="TokenLifeTimeInSeconds">3600</Item>
            <Item Key="AllowGenerationOfClaimsWithNullValues">true</Item>
          </Metadata>
          <CryptographicKeys>
            <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
          </CryptographicKeys>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="executed-SelfAsserted-Input" DefaultValue="true" />
            <!-- Note: Claims such as emails are not listed here because without a ValidationTechnicalProfile when SelfAsserted-Input is shown to the user,
              the user will be prompted for such claims. As a result, that claim is kept in the technical profiles that have ValidationTechnicalProfile -->
          </OutputClaims>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>
        </TechnicalProfiles>
        </ClaimsProvider>

         <ClaimsProvider>
      <DisplayName>AAD SSPR</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="AadSspr-SendCode">
          <DisplayName>Send Code</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.AadSsprProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="Operation">SendCode</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="emailAddress" />
          </InputClaims>
        </TechnicalProfile>
        <TechnicalProfile Id="AadSspr-VerifyCode">
          <DisplayName>Verify Code</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.AadSsprProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="Operation">VerifyCode</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="emailVerificationCode" PartnerClaimType="verificationCode" />
            <InputClaim ClaimTypeReferenceId="email" PartnerClaimType="emailAddress" />
          </InputClaims>
        </TechnicalProfile>
        <TechnicalProfile Id="AadSspr-SendCodeSignup">
          <DisplayName>Send Code</DisplayName>
          <IncludeTechnicalProfile ReferenceId="AadSspr-SendCode" />
        </TechnicalProfile>
        <TechnicalProfile Id="AadSspr-VerifyCodeSignup">
          <DisplayName>Verify Code</DisplayName>
          <IncludeTechnicalProfile ReferenceId="AadSspr-VerifyCode" />
        </TechnicalProfile>
        <TechnicalProfile Id="AadSspr-SendCodePasswordReset">
          <DisplayName>Send Code</DisplayName>
          <IncludeTechnicalProfile ReferenceId="AadSspr-SendCode" />
        </TechnicalProfile>
        <TechnicalProfile Id="AadSspr-VerifyCodePasswordReset">
          <DisplayName>Verify Code</DisplayName>
          <IncludeTechnicalProfile ReferenceId="AadSspr-VerifyCode" />
        </TechnicalProfile>
        <TechnicalProfile Id="AadSspr-SendCodeBackupRecoveryEmail">
          <DisplayName>Send Code</DisplayName>
          <IncludeTechnicalProfile ReferenceId="AadSspr-SendCode" />
        </TechnicalProfile>
        <TechnicalProfile Id="AadSspr-VerifyCodeBackupRecoveryEmail">
          <DisplayName>Verify Code</DisplayName>
          <IncludeTechnicalProfile ReferenceId="AadSspr-VerifyCode" />
        </TechnicalProfile>

         <TechnicalProfile Id="SendEmailForOTPVerificationRestful">
          <DisplayName>API for account verification using OTP</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="DefaultUserMessageIfRequestFailed">There was a problem processing your request. Please try again.</Item>
            <Item Key="UserMessageIfCircuitOpen">There was a problem processing your request. Please try again.</Item>
            <Item Key="UserMessageIfDnsResolutionFailed">There was a problem processing your request. Please try again.</Item>
            <Item Key="UserMessageIfRequestTimeout">There was a problem processing your request. Please try again.</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="restApiStep" PartnerClaimType="step" DefaultValue="SendEmailForOTPVerification" AlwaysUseDefaultValue="true" />
            <InputClaim ClaimTypeReferenceId="restApiClientId" PartnerClaimType="client_id" DefaultValue="{OIDC:ClientId}" AlwaysUseDefaultValue="true" />
            <InputClaim ClaimTypeReferenceId="otp" />
          </InputClaims>
          <EnabledForUserJourneys>Never</EnabledForUserJourneys>
        </TechnicalProfile>

      </TechnicalProfiles>
    </ClaimsProvider>

</ClaimsProviders>

 <UserJourneys xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06">
    <UserJourney Id="B2CPasswordReset_V3" DefaultCpimIssuerTechnicalProfileReferenceId="JwtIssuer">
      <AssuranceLevel>LOA1</AssuranceLevel>
      <PreserveOriginalAssertion>false</PreserveOriginalAssertion>
      <OrchestrationSteps>
        <OrchestrationStep Order="1" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="PasswordResetUsingEmailAddressExchange" TechnicalProfileReferenceId="LocalAccountDiscoveryUsingEmailAddressV3" />
          </ClaimsExchanges>
          </OrchestrationStep>
        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <Preconditions>
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>objectId</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <!-- If the objectId claim exists, make the claims transformation to generate the otp -->
            <ClaimsExchange Id="PasswordReset_GenerateOtp" TechnicalProfileReferenceId="GenerateOtpPasswordReset" />
          </ClaimsExchanges>
        </OrchestrationStep>

<OrchestrationStep Order="3" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="NewCredentials" TechnicalProfileReferenceId="LocalAccountWritePasswordUsingObjectId-V2_2023_08_03" />
          </ClaimsExchanges>
        </OrchestrationStep>
        
        <OrchestrationStep Order="4" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer" />
      </OrchestrationSteps>

      <!-- <UserJourney Id="PasswordReset">
      <OrchestrationSteps>
        <OrchestrationStep Order="1" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="PasswordResetUsingEmailAddressExchange" TechnicalProfileReferenceId="LocalAccountDiscoveryUsingEmailAddress" />
          </ClaimsExchanges>
        </OrchestrationStep>
        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="NewCredentials" TechnicalProfileReferenceId="LocalAccountWritePasswordUsingObjectId" />
          </ClaimsExchanges>
        </OrchestrationStep>
        <OrchestrationStep Order="3" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer" />
      </OrchestrationSteps>
      <ClientDefinition ReferenceId="DefaultWeb" />
    </UserJourney> -->
    </UserJourney>
    </UserJourneys>

    <SubJourneys>
    <!-- <SubJourney Id="UserJourneyFeatureGeneration" Type="Call">
      <OrchestrationSteps>
        <OrchestrationStep Order="1" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="SetFeatureDefaultValue" TechnicalProfileReferenceId="SetFeatureDefaultValue" />
          </ClaimsExchanges>
        </OrchestrationStep>
      </OrchestrationSteps>
    </SubJourney> -->

     <SubJourney Id="IdentityProviderSelection_LocalAccountDiscovery" Type="Call">
      <OrchestrationSteps>
        <OrchestrationStep Order="1" Type="ClaimsProviderSelection" ContentDefinitionReferenceId="api.idpselections.signup1.1" />
        <OrchestrationStep Order="2" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="PasswordResetUsingUserNameExchange" TechnicalProfileReferenceId="LocalAccountDiscoveryUsingUserNameAndValidateStrongAuthenticationEmailAddressV3" />
            <ClaimsExchange Id="PasswordResetUsingEmailAddressExchange" TechnicalProfileReferenceId="LocalAccountDiscoveryUsingEmailAddressV3" />
          </ClaimsExchanges>
        </OrchestrationStep>
      </OrchestrationSteps>
    </SubJourney>

    <SubJourney Id="PasswordReset_GenerateOtp" Type="Call">
      <OrchestrationSteps>
        <OrchestrationStep Order="1" Type="ClaimsExchange">
          <Preconditions>
            <!-- Check to see if the objectId exists before making the claims transformation -->
            <Precondition Type="ClaimsExist" ExecuteActionsIf="false">
              <Value>objectId</Value>
              <Action>SkipThisOrchestrationStep</Action>
            </Precondition>
          </Preconditions>
          <ClaimsExchanges>
            <!-- If the objectId claim exists, make the claims transformation to generate the otp -->
            <ClaimsExchange Id="PasswordReset_GenerateOtp" TechnicalProfileReferenceId="GenerateOtpPasswordReset" />
          </ClaimsExchanges>
        </OrchestrationStep>
      </OrchestrationSteps>
    </SubJourney>

    <SubJourney Id="UserInteraction_EnterNewPassword_2023_08_03" Type="Call">
      <OrchestrationSteps>
        <OrchestrationStep Order="1" Type="ClaimsExchange">
          <ClaimsExchanges>
            <ClaimsExchange Id="NewCredentials" TechnicalProfileReferenceId="LocalAccountWritePasswordUsingObjectId-V2_2023_08_03" />
          </ClaimsExchanges>
        </OrchestrationStep>
      </OrchestrationSteps>
    </SubJourney>

<SubJourney Id="B2CPasswordReset_V3_Internal_2023_03_09" Type="Transfer">
      <OrchestrationSteps>
        <!-- <OrchestrationStep Order="1" Type="InvokeSubJourney">
          <JourneyList>
            <Candidate SubJourneyReferenceId="UserJourneyFeatureGeneration" />
          </JourneyList>
        </OrchestrationStep> -->
        <OrchestrationStep Order="1" Type="InvokeSubJourney">
          <JourneyList>
            <Candidate SubJourneyReferenceId="IdentityProviderSelection_LocalAccountDiscovery" />
          </JourneyList>
        </OrchestrationStep>
        <!-- Generate OTP using technical profile -->
        <OrchestrationStep Order="2" Type="InvokeSubJourney">
          <JourneyList>
            <Candidate SubJourneyReferenceId="PasswordReset_GenerateOtp" />
          </JourneyList>
        </OrchestrationStep>
        
        <OrchestrationStep Order="3" Type="InvokeSubJourney">
          <JourneyList>
            <Candidate SubJourneyReferenceId="UserInteraction_EnterNewPassword_2023_08_03" />
          </JourneyList>
        </OrchestrationStep>
        <OrchestrationStep Order="4" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer" />
      </OrchestrationSteps>
    </SubJourney>
    </SubJourneys>
</TrustFrameworkPolicy>